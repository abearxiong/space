{"version":3,"sources":["webpack://space/./src/graphql/repository/issues/ADD_ISSUE.ts","webpack://space/./src/graphql/repository/issues/GET_ISSUE.ts","webpack://space/./src/graphql/repository/issues/UPDATE_ISSUE.ts","webpack://space/./src/graphql/user/LOGIN_USER.ts","webpack://space/./src/stores/models.ts","webpack://space/./src/stores/issues/index.ts","webpack://space/./src/graphql/repository/issues/GET_ISSUE_COMMENTS.ts","webpack://space/./src/graphql/repository/issues/GET_ISSUES.ts","webpack://space/./src/graphql/repository/issues/labels/GET_LABELS.ts","webpack://space/./src/graphql/repository/issues/ADD_ISSUE_COMMENT.ts","webpack://space/./src/graphql/index.ts","webpack://space/./src/stores/issues/label.ts","webpack://space/./src/modules/contexts.tsx","webpack://space/./src/hooks/user-stores.tsx","webpack://space/./src/index.scss?0c9d","webpack://space/./src/components/icon/icon.tsx","webpack://space/./src/pages/home/route.tsx","webpack://space/./src/pages/user/route.tsx","webpack://space/./src/components/face-emjoy/FaceEmjoy.tsx","webpack://space/./src/components/table-common/TableSimple.tsx","webpack://space/./src/components/wrapper/ModalWrapper.tsx","webpack://space/./src/components/echarts/echarts-wrapper/EchartsWrapper.tsx","webpack://space/./src/pages/edit/route.tsx","webpack://space/./src/pages/repository/route.tsx","webpack://space/./src/route/index.tsx","webpack://space/./src/layouts/layout-head/LayoutHead.scss?bdac","webpack://space/./src/layouts/layout-head/SettingModal.tsx","webpack://space/./src/layouts/layout-head/LayoutHead.tsx","webpack://space/./src/layouts/Layouts.tsx","webpack://space/./src/App.tsx","webpack://space/./src/modules/error/sentry.ts","webpack://space/./src/modules/error/sentry-context.ts","webpack://space/./src/modules/error/sentry-fallback.tsx","webpack://space/./src/serviceWorker.ts","webpack://space/./src/index.tsx","webpack://space/./src/mockjs/index.ts","webpack://space/./src/models/store-model.ts","webpack://space/./src/stores/user/userinfo.ts","webpack://space/./src/utils/crypto.ts","webpack://space/./src/stores/user/store.ts","webpack://space/./src/utils/cache.ts","webpack://space/./src/utils/history.ts","webpack://space/./src/utils/regex.ts","webpack://space/./src/index.scss","webpack://space/./src/layouts/layout-head/LayoutHead.scss"],"names":["LOGIN_USER","StoreGraphgl","userStore","query","name","pageData","variables","first","pageInfo","this","newVariables","userRepository","endCursor","after","hasNextPage","setVariables","getPageData","message","pageOptions","client","loading","data","networkStatus","mergePageData","newData","isLatest","issues","repository","edges","length","newEdges","unionBy","reverse","undefined","IssuesStore","LabelsStore","labelCheck","setLabelCheck","labels","e","issuesStore","window","editStore","GET_ISSUE","labelsStore","GET_LABELS","StoresContext","useStores","options","IconFontType","scriptUrl","HomeRoute","path","icon","color","isChoose","type","component","lazy","UserRoutes","split","ModalWrapper","title","visible","setVisible","onOk","onCancel","children","rest","onHidden","Modal","EditRoute","style","RepositoryRoute","allRoute","allPathRoute","allRouteName","SigleRoute","SigleRouteName","concat","DeepRoute","r","parentPath","parent","i","child","pathname","push","Array","from","forEach","item","pathCantInTab","pathIsSinglePage","SinglePageRoutes","kv","c","HOME","replace","toUpperCase","includes","noTab","isSinglePage","res","renderRoutesDom","map","v","key","exact","history","Suspense","fallback","render","status","subTitle","extra","onClick","TabPaneKey","TabPane","SettingModal","formUser","formSetting","isGuest","userData","toGetRepositoryIdTitle","useEffect","setTimeout","TabUser","tab","form","onFinish","onValuesChange","initialValues","user","label","labelCol","span","disabled","value","email","location","websiteUrl","display","justifyContent","postCode","clearUserinfo","marginLeft","TabSetting","setUserRepository","clearPage","setIsShowSetting","tooltip","valuePropName","placement","arrowPointAtCenter","to","target","htmlType","isShowSetting","footer","defaultActiveKey","avatar","src","avatarUrl","marginRight","UserMenu","open","UserInfoComm","overlay","className","Layout","height","flexGrow","maxCount","locale","manual","throwOnError","basename","Paragraph","Text","error","componentStack","resetError","strong","fontSize","Boolean","hostname","match","_env","dsn","ignoreErrors","environment","showDialog","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","mock","toJS","StoreBase","Storage","localStorage","time","dispose","autoCache","SaveName","getCache","setCache","cancelCache","clearCache","setData","isSet","JSON","stringify","StorePage","list","formData","payload","USERINFO","getUserinfo","parse","getItem","encrypt","word","keyStr","srcs","mode","padding","toString","decrypt","crypt","defaultToken","owner","repositoryId","canWrite","UserStore","token","client_id","client_id_local","connect","setClient","githubToken","httpLink","HttpLink","uri","headers","Authorization","link","cache","typePolicies","Query","fields","project","merge","existing","incoming","Repository","viewer","getSave","login","href","a","proxyUrl","useQueryUrl","logout","isNext","auto","getToken","setToken","updateData","update","setUserData","StorageEnum","DEFAULTCACHENAME","FormCache","flag","LOCAL","SESSION","sessionStorage","set","params","storage","endDate","Date","valueOf","localUpdateTime","str","setItem","get","parseJson","Number","clear","removeItem","Bank","pattern","Email","HTML","NumMillion","NumGT1","NumGT10","Num","Money","Password","Phone","StrNoOtherChars","Url","IsPinduoduoUrl","IsPinGoodId","IsTaobaoUrl","IsTaobaoId","IsTmallUrl","IsTmallId","NumGT0","WeChat","___CSS_LOADER_EXPORT___","module","id","locals"],"mappings":"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","file":"scripts/main~4f064d56.416e3.bundule.js","sourcesContent":["import gql from 'graphql-tag';\n/*\n{\n  \"repositoryId\":\"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\",\n  \"title\":\"使用apollo测试的题目\",\n  \"body\":\"## 使用apollo测试后的body\",\n  \"labelIds\": [\"MDU6TGFiZWwxMzU2ODYzMTMz\"]\n}\n*/\nexport default gql`\n  mutation CreateIssuePayload(\n    $repositoryId: ID!\n    $title: String!\n    $body: String!\n    $labelIds: [ID!]\n  ) {\n    createIssue(\n      input: {\n        repositoryId: $repositoryId\n        title: $title\n        body: $body\n        labelIds: $labelIds\n      }\n    ) {\n      issue {\n        id\n        number\n        title\n        bodyHTML\n        body\n        author {\n          login\n        }\n        createdAt\n        labels(first: 10) {\n          edges {\n            node {\n              id\n              name\n              color\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\nexport default gql`\n  query Issues(\n    $owner: String!\n    $name: String!\n    $number: Int!\n    $first: Int!\n    $after: String\n  ) {\n    repository(owner: $owner, name: $name) {\n      issue(number: $number) {\n        id\n        number\n        title\n        bodyHTML\n        body\n        createdAt\n        state\n        labels(first: $first, after: $after) {\n          edges {\n            node {\n              id\n              name\n              color\n              description\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n/*\n{\n  \"id\":\"MDU6SXNzdWU1MTQwODM3NDQ=\",\n  \"state\": \"OPEN\",\n  \"title\":\"使用apollo测试的题目\",\n  \"body\":\"## 使用apollo测试后的body\\r\\n测试更新2\",\n  \"labelIds\": [\"MDU6TGFiZWwxMzU2ODYzMTMz\"]\n}\n*/\nexport default gql`\n  mutation UpdateIssuePayload(\n    $id: ID!\n    $state: IssueState\n    $title: String!\n    $body: String!\n    $labelIds: [ID!]\n  ) {\n    updateIssue(\n      input: {\n        id: $id\n        state: $state\n        title: $title\n        body: $body\n        labelIds: $labelIds\n      }\n    ) {\n      issue {\n        id\n        number\n        title\n        bodyHTML\n        body\n        author {\n          login\n        }\n        state\n        createdAt\n        labels(first: 10) {\n          edges {\n            node {\n              id\n              description\n              color\n              url\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  query LoginUser {\n    viewer {\n      id\n      login\n      name\n      avatarUrl\n      bio\n      email\n      company\n      location\n      resourcePath\n      createdAt\n      updatedAt\n      status {\n        id\n        message\n        emoji\n        createdAt\n        updatedAt\n      }\n      sponsorsListing {\n        id\n      }\n      isCampusExpert\n      isDeveloperProgramMember\n      isEmployee\n      isHireable\n      isSiteAdmin\n      isViewer\n      viewerCanFollow\n      websiteUrl\n      twitterUsername\n    }\n  }\n`;\n","import { message } from 'antd';\nimport { PageInfo } from './user/store';\nimport { StoreBase } from '@/models';\nimport { UserStore } from '@/stores';\nimport { action, makeObservable, observable, toJS } from 'mobx';\nimport { DocumentNode } from '@apollo/client';\nimport { unionBy } from 'lodash-es';\n\nexport type MergeDataOptions = {\n  isLatest?: boolean;\n};\nexport type PageOptions = {\n  isLatest: boolean;\n};\nclass StoreGraphgl<T = any, V = any> extends StoreBase<V> {\n  name = 'StoreGraphql';\n  userStore: UserStore;\n  query: DocumentNode;\n\n  loading?: boolean;\n  networkStatus?: any;\n  pageInfo?: PageInfo;\n  // @observable pageData: T[] = [];\n  pageData: T[] = [];\n  variables: any = { first: 10 };\n\n  constructor(userStore: any, query: DocumentNode) {\n    super();\n    this.userStore = userStore;\n    this.query = query;\n    makeObservable(this, {\n      pageData: observable,\n    });\n  }\n  @action.bound\n  setPageInfo(pageInfo: any) {\n    this.pageInfo = { ...this.pageInfo, ...pageInfo };\n  }\n  @action.bound\n  setVariables(variables?: any | PageInfo) {\n    const newVariables: any = {\n      ...this.userStore.userRepository,\n      ...this.variables,\n      ...variables,\n    };\n    console.log('variable', variables);\n    if (variables && (variables as PageInfo).endCursor) {\n      newVariables.after = (variables as PageInfo).endCursor;\n    }\n    if (!variables && this.pageInfo) {\n      const after = this.pageInfo?.endCursor;\n      if (after) {\n        newVariables.after = (variables as PageInfo).endCursor;\n      }\n    }\n    this.variables = newVariables;\n\n    return newVariables;\n  }\n  @action.bound\n  getNextPage() {\n    if (this.pageInfo && this.pageInfo.hasNextPage) {\n      this.setVariables(toJS(this.pageInfo));\n      this.getPageData();\n    } else if (this.pageInfo) {\n      message.info('no more');\n    }\n  }\n  // 其他方式合并\n  setPageData(pageData: any) {\n    this.pageData = pageData;\n  }\n\n  // 获取数据\n  @action.bound\n  async getPageData(pageOptions?: PageOptions) {\n    const variables = this.setVariables(this.userStore.userRepository);\n    const client = this.userStore.client;\n    if (client) {\n      const { loading, data, networkStatus } = await client.query({\n        query: this.query,\n        variables,\n      });\n      this.loading = loading;\n      this.networkStatus = networkStatus;\n      this.mergePageData(data, pageOptions);\n    } else {\n      console.error('client失效');\n    }\n  }\n  /**\n   * 合并数据\n   * pageInfo处理\n   */\n  @action.bound\n  mergePageData(newData: any, { isLatest = false }: MergeDataOptions = {}) {\n    console.groupCollapsed(`handle data(${this.name})`);\n    const issues = newData?.repository?.issues;\n    if (issues) {\n      const edges = issues.edges ? [...issues.edges] : [];\n      const pageInfo = issues.pageInfo;\n      if (pageInfo && !isLatest) this.pageInfo = pageInfo;\n\n      if (edges) {\n        const pageData = [...toJS(this.pageData)];\n        if (pageData.length === 0) {\n          this.pageData = edges;\n        } else {\n          const newEdges = unionBy(\n            edges.reverse(),\n            pageData.reverse(),\n            'node.id',\n          );\n          this.pageData = newEdges.reverse();\n        }\n      } else {\n        console.error('no new query edges data');\n      }\n      console.log('new Data', newData);\n      console.log(issues);\n      console.log(edges);\n    } else {\n      console.error('no new query issues data');\n    }\n    console.groupEnd();\n  }\n  @action.bound\n  clearPage() {\n    this.pageData = [];\n    this.pageInfo = undefined;\n  }\n}\nclass StoreMutation<T = any, V = any> extends StoreGraphgl<T, V> {\n  name = 'StoreMutation';\n  constructor(userStore: any, query: DocumentNode) {\n    super(userStore, query);\n  }\n}\nexport { StoreGraphgl, StoreMutation };\n","import { StoreGraphgl } from '../models';\n\nexport class IssuesStore extends StoreGraphgl {\n  name = 'IssuesStore';\n}\n","import gql from 'graphql-tag';\n/*\n{\n  \"owner\":\"abearxiong\",\n  \"name\":\"abearxiong.github.io\",\n  \"number\": 52,\n  \"first\": 10,\n  \"after\": null\n}\n*/\nexport default gql`\n  query IssueComment(\n    $owner: String!\n    $name: String!\n    $number: Int!\n    $first: Int!\n    $after: String\n  ) {\n    repository(owner: $owner, name: $name) {\n      issue(number: $number) {\n        id\n        comments(first: $first, after: $after) {\n          pageInfo {\n            endCursor\n            startCursor\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              body\n              bodyHTML\n              bodyText\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { DocumentNode, gql } from '@apollo/client';\nconst GET_ISSUES: DocumentNode = gql`\n  query Issues($owner: String!, $name: String!, $first: Int!, $after: String) {\n    repository(owner: $owner, name: $name) {\n      issues(\n        first: $first\n        after: $after\n        orderBy: { field: CREATED_AT, direction: DESC }\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            number\n            title\n            bodyHTML\n            body\n            author {\n              login\n            }\n            createdAt\n            comments {\n              totalCount\n            }\n            labels(first: 10) {\n              edges {\n                node {\n                  id\n                  name\n                  color\n                  description\n                }\n              }\n            }\n            reactions(content: HEART) {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default GET_ISSUES;\n","import gql from 'graphql-tag';\nexport default gql`\n  query IssuesLabels(\n    $owner: String!\n    $name: String!\n    $first: Int!\n    $after: String\n  ) {\n    repository(owner: $owner, name: $name) {\n      labels(first: $first, after: $after) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            description\n            color\n            url\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\nexport default gql`\n  mutation AddCommentPayload($subjectId: ID!, $body: String!) {\n    addComment(input: { subjectId: $subjectId, body: $body }) {\n      commentEdge {\n        node {\n          id\n          body\n          bodyHTML\n          bodyText\n        }\n      }\n    }\n  }\n`;\n","import GET_ISSUE_EXPORT from './repository/issues/GET_ISSUE';\nimport GET_ISSUE_COMMENTS_EXPORT from './repository/issues/GET_ISSUE_COMMENTS';\nimport GET_ISSUES_EXPORT from './repository/issues/GET_ISSUES';\nimport GET_LABELS_EXPORT from './repository/issues/labels/GET_LABELS';\nimport ADD_ISSUE_EXPORT from './repository/issues/ADD_ISSUE';\nimport ADD_ISSUE_COMMENT_EXPORT from './repository/issues/ADD_ISSUE_COMMENT';\nimport UPDATE_ISSUE_EXPORT from './repository/issues/UPDATE_ISSUE';\n\nexport const GET_ISSUE = GET_ISSUE_EXPORT;\nexport const GET_ISSUE_COMMENTS = GET_ISSUE_COMMENTS_EXPORT;\nexport const GET_ISSUES = GET_ISSUES_EXPORT;\nexport const GET_LABELS = GET_LABELS_EXPORT;\n\nexport const ADD_ISSUE = ADD_ISSUE_EXPORT;\nexport const ADD_ISSUE_COMMENT = ADD_ISSUE_COMMENT_EXPORT;\nexport const UPDATE_ISSUE = UPDATE_ISSUE_EXPORT;\n\nexport * from './user';\n","import { DocumentNode } from 'graphql';\nimport { unionBy } from 'lodash-es';\nimport { action, observable, toJS, makeObservable } from 'mobx';\nimport { MergeDataOptions, StoreGraphgl } from '../models';\n\nexport type IssueLabel = {\n  color: string;\n  description: string;\n  id: string;\n  name: string;\n  url: string;\n};\nexport class LabelsStore<T = any> extends StoreGraphgl<T> {\n  constructor(userStore: any, query: DocumentNode) {\n    super(userStore, query);\n    makeObservable(this, {\n      labelCheck: observable,\n      setLabelCheck: action.bound,\n    });\n  }\n  name = 'LabelsStore';\n  variables: any = { first: 100 };\n  /**\n   * 合并数据\n   * pageInfo处理\n   */\n  @action.bound\n  mergePageData(newData: any, { isLatest = false }: MergeDataOptions = {}) {\n    console.groupCollapsed(`handle data(${this.name})`);\n    const labels = newData?.repository?.labels;\n    if (labels) {\n      const edges = labels.edges ? [...labels.edges] : [];\n      const pageInfo = labels.pageInfo;\n      if (pageInfo && !isLatest) this.pageInfo = pageInfo;\n\n      if (edges) {\n        const pageData = [...toJS(this.pageData)];\n        if (pageData.length === 0) {\n          this.pageData = edges;\n        } else {\n          const newEdges = unionBy(\n            edges.reverse(),\n            pageData.reverse(),\n            'node.id',\n          );\n          this.pageData = newEdges.reverse();\n        }\n      } else {\n        console.error('no new query edges data');\n      }\n      console.log('new Data', newData);\n      console.log(labels);\n      console.log(edges);\n    } else {\n      console.error('no new query labels data');\n    }\n    console.groupEnd();\n  }\n  @observable labelCheck: any[] = [];\n\n  @action.bound\n  setLabelCheck(e: any[]) {\n    this.labelCheck = e;\n  }\n}\n","// src/contexts/index.tsx\nimport React from 'react';\nimport { UserStore } from '@/stores';\nimport { IssuesStore } from '@/stores/issues';\nimport { GET_ISSUES } from '@/graphql';\nimport GET_ISSUE from '@/graphql/repository/issues/GET_ISSUE';\nimport { LabelsStore } from '@/stores/issues/label';\nimport GET_LABELS from '@/graphql/repository/issues/labels/GET_LABELS';\n\nconst userStore = new UserStore();\nconst issuesStore = new IssuesStore(userStore, GET_ISSUES);\nwindow.userStore = userStore;\n\nconst editStore = new IssuesStore(userStore, GET_ISSUE);\nconst labelsStore = new LabelsStore(userStore, GET_LABELS);\n\nexport const StoresContext = React.createContext({\n  // 登录\n  userStore,\n  issuesStore,\n  editStore,\n  labelsStore,\n});\n","// src/hooks/use-stores.tsx\nimport React from 'react';\nimport { StoresContext } from '@/modules/contexts';\n\nexport const useStores = () => React.useContext(StoresContext);\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./index.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { createFromIconfontCN } from '@ant-design/icons';\nimport React from 'react';\n\n// 关于商家平台的log\n// 方：icon-tianmao icon-taobao icon-pinduoduo\n//\n// 圆： icon-taobao1 icon-bianzu\n//\n// 其他\n// 首页 icon-shouye 推广 icon-tuiguang  订单 icon-dingdan 财务 icon-caiwu\n// 功能 icon-danseshixintubiao- 店铺 icon-4\nconst IconFontType = {\n  Tianmao: 'icon-tianmao',\n  Taobao: 'icon-taobao',\n  Pinduoduo: 'icon-pinduoduo',\n  Taobao1: 'icon-taobao1',\n  Shouye: 'icon-shouye', // 首页\n  Shouyi: 'icon-shouyi', // 收益\n  Tuiguang: 'icon-tuiguang', // 推广\n  Dingdan: 'icon-dingdan', // 订单\n  Caiwu: 'icon-caiwu', // 财务\n  Danseshixintubiao: 'icon-danseshixintubiao-', // 功能\n  More: 'icon-gongnengguanli',\n  TuiSong: 'icon-tuisongxiaoxi',\n  Dianpu: 'icon-4', // 店铺\n  Data: 'icon-iconfontpaixingbang', // 数据中心\n  Fans: 'icon-fensiguanli',\n  Shangpin: 'icon-shangpin',\n  Sucai: 'icon-sucai',\n  LoginUser: 'icon-login-user',\n  LoginPassword: 'icon-login-password',\n};\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2089122_xciruq9uvda.js',\n});\n\nexport type IconImgType = {\n  src: string;\n  style?: React.CSSProperties;\n  className?: string;\n};\n/**\n * only use to home side menu\n */\nexport const IconImg = ({ src, style, className }: IconImgType) => {\n  return (\n    <img\n      className={className}\n      src={src}\n      style={{\n        width: 16,\n        height: 16,\n        marginRight: 14,\n        marginTop: -3,\n        ...style,\n      }}\n    />\n  );\n};\n\nexport { IconFont, IconFontType };\n","import React, { lazy } from 'react';\nimport { IconFont, IconFontType } from '@/components/icon';\n\nimport { ChildrenRoute } from '@/models';\nconst HomeRoute: ChildrenRoute = {\n  path: '/',\n  name: '首页',\n  // eslint-disable-next-line react/display-name\n  icon: (color: string, isChoose) => <IconFont type={IconFontType.Shouye} />,\n  component: lazy(() => import('./Home')),\n  // noMenu: true,\n};\n\nexport { HomeRoute };\n","import React, { lazy } from 'react';\nimport { IconFont, IconFontType } from '@/components/icon';\n\nimport { ChildrenRoute } from '@/models';\n\nexport const LoginRoute: ChildrenRoute = {\n  path: '/login',\n  name: '首页',\n  // eslint-disable-next-line react/display-name\n  icon: (color: string, isChoose) => <IconFont type={IconFontType.Shouye} />,\n  component: lazy(() => import('./Login/Login')),\n  // noMenu: true,\n};\nexport const LoginCallbackRoute: ChildrenRoute = {\n  path: '/login_callback',\n  name: '首页',\n  // eslint-disable-next-line react/display-name\n  icon: (color: string, isChoose) => <IconFont type={IconFontType.Shouye} />,\n  component: lazy(() => import('./login_callback/LoginCallback')),\n  // noMenu: true,\n};\nexport const UserRoutes = [LoginRoute, LoginCallbackRoute];\n","import React from 'react';\nimport Styles from './FaceEmjoy.less';\n\nconst emjoy =\n  '😄 😊 😃 😉 😍 😘 😚 😳 😁 😌 😜 😝 😒 😏 😓 😔 😖 😥 😰 😨 😣 😢 😭 😂 😱 😠 😪 😷 😇 😋 😧 😦 😯 😵 😛 😶 😎 😅 😟 👍 👎 👏 🙏 ✊ ❗ 🔞 🚳 📵 🆙 🐲 💣 💥 🎲 💰 🔔 🔕 💩 🌹';\nconst emjoyList = emjoy.split(' ');\n\ntype Props = {\n  showFace: boolean;\n  chooseFace: (emjoy?: string) => void;\n};\nexport const FaceEmjoy = ({ showFace, chooseFace }: Props) => {\n  const sendFace = (emjoy: string) => {\n    // this.props.parent.getFaceItem(this, emjoy);\n    chooseFace(emjoy);\n  };\n  return (\n    <section\n      className={Styles.FaceEmjoy}\n      style={{ display: showFace ? 'block' : 'none' }}\n    >\n      <div className='face-container'>\n        {emjoyList.map((item) => (\n          <span className='emjoy' onClick={() => sendFace(item)} key={item}>\n            {item}\n          </span>\n        ))}\n      </div>\n    </section>\n  );\n};\nexport default FaceEmjoy;\n","import React from 'react';\nimport { Table } from './TableCommon';\nimport { TableProps } from 'antd/es/table';\n\ntype Props = {\n  columns: any;\n  loading?: boolean;\n  pageData: any;\n  getNewPage?: any;\n};\nconst TableSimple = ({\n  columns,\n  loading,\n  pageData,\n  getNewPage,\n  pagination,\n  ...rest\n}: Props & TableProps<any>) => {\n  return (\n    <Table\n      {...rest}\n      columns={columns}\n      loading={loading}\n      pagination={{\n        current: pageData.current,\n        total: pageData.total,\n        pageSize: pageData.size ?? 10,\n        onChange: (current, size) => {\n          getNewPage && getNewPage({ current, size });\n        },\n        ...pagination,\n      }}\n      // scroll={{ x: 1000 }}\n      dataSource={pageData.list}\n    />\n  );\n};\nexport { TableSimple };\n","import React, { ReactNode } from 'react';\nimport { ModalProps } from '@/models';\nimport Modal from 'antd/lib/modal/Modal';\n\ntype PropsModalWrapper = {\n  children: ReactNode;\n};\ntype Props = ModalProps<PropsModalWrapper>;\n// useway\n/*\n\ntype SelfProps = {\n  form: any;\n  BrandInfo: any;\n};\ntype Props = ModalProps<SelfProps>;\n\n\n*/\n//\n\n// 因为显示visible是外层控制\n// 因此\n// 对modal处理，对onOk和onCancel进行默认处理\nconst ModalWrapper = ({\n  title,\n  visible,\n  setVisible,\n  onOk,\n  onCancel,\n  children,\n  ...rest\n}: Props) => {\n  // onOk和okCancel不存在则设置默认的隐藏\n  const onHidden = () => setVisible(false);\n  onOk = onOk || onHidden;\n  onCancel = onCancel || onHidden;\n  return (\n    <Modal\n      visible={visible}\n      title={title}\n      onOk={onOk}\n      onCancel={onCancel}\n      {...rest}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport { ModalWrapper };\n","import { useMount } from 'ahooks';\nimport React, { useEffect, useRef } from 'react';\n// import echarts from 'echarts';\n\nconst echarts: any = '';\ntype Props = {\n  option: any;\n  style?: React.CSSProperties;\n};\nexport const EchartsWrapper = ({ option, style }: Props) => {\n  const EchartsRef = useRef(null);\n  let chartInstance: any = null;\n  useMount(() => {\n    console.log('echart', echarts);\n  });\n  useEffect(() => {\n    if (EchartsRef) {\n      console.log('init', EchartsRef);\n      if (!chartInstance) {\n        const myChart = echarts.init(\n          (EchartsRef.current as unknown) as HTMLDivElement,\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        chartInstance = myChart;\n      }\n      //初始化echarts\n      const o: any = option;\n      if (chartInstance && option) {\n        chartInstance.setOption(o);\n        console.log('chartInstance', chartInstance);\n      }\n    } else {\n      if (chartInstance && option) {\n        chartInstance.setOption(option);\n        console.log('chartInstance', chartInstance);\n      }\n    }\n  }, [EchartsRef, option]);\n\n  return (\n    <div ref={EchartsRef} style={{ height: 400, ...style }}>\n      loading\n    </div>\n  );\n};\n","/**\n * 路由处理：ChildrenRoute和ParentRoute\n * // icon 根据情况设置，建议使用iconfont配置\n */\nimport { lazy } from 'react';\nimport { IconFont, IconFontType } from '@/components';\nimport { ChildrenRoute } from '@/models';\nimport React from 'react';\n\nconst EditRoute: ChildrenRoute = {\n  path: '/edit/new',\n  name: '开发中',\n  // eslint-disable-next-line react/display-name\n  icon: (color: string) => (\n    <IconFont type={IconFontType.Danseshixintubiao} style={{ color: color }} />\n  ),\n  component: lazy(() => import('./Edit')),\n  // noMenu: true,\n};\n\nexport { EditRoute };\n\nexport const EditRoutes = [EditRoute];\n","/**\n * 路由处理：ChildrenRoute和ParentRoute\n * // icon 根据情况设置，建议使用iconfont配置\n */\nimport { lazy } from 'react';\nimport { IconFont, IconFontType } from '@/components';\nimport { ChildrenRoute } from '@/models';\nimport React from 'react';\n\nconst RepositoryRoute: ChildrenRoute = {\n  path: '/repository',\n  name: '获取仓库',\n  // eslint-disable-next-line react/display-name\n  icon: (color: string) => (\n    <IconFont type={IconFontType.Danseshixintubiao} style={{ color: color }} />\n  ),\n  component: lazy(() => import('./Repository')),\n  // noMenu: true,\n};\n\nexport { RepositoryRoute };\n\nexport const RepositoryRoutes = [RepositoryRoute];\n","import React, { Suspense, ReactNodeArray } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { Result, Button } from 'antd';\nimport { ParentRoute, ChildrenRoute, RouteConfig } from '@/models';\n\nimport { HomeRoute } from '../pages/home';\nimport { UserRoutes } from '../pages/user';\nimport { EditRoute } from '../pages/edit';\nimport { RepositoryRoute } from '../pages/repository';\n\n// 所有路由，父子路由并存\nlet allRoute: RouteConfig[] = [];\n// 路径数组，深层递归， 为数组，全是子路由\nconst allPathRoute: PathRoute[] = [];\n// 根据path路径，path为key，路由为value 为对象\nconst allRouteName: SimpleObject = {};\n\n// 单页面路由\nconst SigleRoute: ReactNodeArray = [];\nconst SigleRouteName: PathRoute[] = [];\n\nallRoute = allRoute.concat([\n  HomeRoute,\n  ...UserRoutes,\n  EditRoute,\n  RepositoryRoute,\n]);\n\nexport type PathRoute = RouteConfig & {\n  noTab?: boolean;\n  isSinglePage?: boolean;\n  pathname: string;\n};\nconst DeepRoute = (r: ParentRoute | ChildrenRoute, path: string) => {\n  if ((r as ParentRoute).parentPath) {\n    const parent = r as ParentRoute;\n    for (const i in parent.children) {\n      DeepRoute(parent.children[i], path + parent.parentPath);\n    }\n  } else {\n    const child = r as ChildrenRoute;\n    child.pathname = path + child.path;\n    allPathRoute.push(child as PathRoute);\n  }\n};\nArray.from(allRoute).forEach((item) => {\n  if ((item as ParentRoute).parentPath) {\n    const parent = item as ParentRoute;\n    // 第一次递归\n    DeepRoute(parent, '');\n  } else {\n    item.pathname = (item as ChildrenRoute).path;\n    allPathRoute.push(item as PathRoute);\n  }\n});\n// ===========================================================\n// 不可以包含在tab的路径 name数组\nconst pathCantInTab: any[] = [];\n// console.log('pathCantInTab', pathCantInTab);\n\n// 单页面的路径\nconst pathIsSinglePage: any[] = [];\n// ===========================================================\nexport const SinglePageRoutes: ChildrenRoute[] = [];\n\n// 路径的名字，并打印出来，根据typescript进行类型推断\n// 保存url路径\nlet kv: SimpleObject = {};\nallPathRoute.forEach((item) => {\n  const pathname = item.pathname;\n  let c: SimpleObject = {};\n  if (pathname === '/') {\n    c = { HOME: pathname };\n  } else {\n    c[pathname?.replace(/\\//g, '').toUpperCase()] = pathname;\n  }\n  kv = { ...kv, ...c };\n  pathCantInTab.includes(item.name) && (item.noTab = true);\n  pathIsSinglePage.includes(item.name) && (item.isSinglePage = true);\n  pathname && (allRouteName[pathname] = item);\n});\n\n// IMPORTANT: 这里打印具体的值\nconsole.groupCollapsed('urlFront');\nconsole.log(JSON.stringify(kv));\nconsole.groupEnd();\nexport const urlPath = {\n  ...kv,\n};\n// 路由渲染方法--渲染layout包含的页面\nconst renderRoutes = (): ReactNodeArray => {\n  const res: ReactNodeArray = [];\n  allPathRoute.map((v) => {\n    if (!v.isSinglePage) {\n      res.push(\n        <Route\n          key={v.pathname}\n          path={`${v.pathname}`}\n          component={(v as ChildrenRoute).component}\n          exact={true}\n        />,\n      );\n    } else {\n      SigleRoute.push(\n        <Route\n          key={v.pathname}\n          path={`${v.pathname}`}\n          component={(v as ChildrenRoute).component}\n        />,\n      );\n      SigleRouteName.push(v);\n    }\n  });\n  return res;\n};\nconst renderRoutesDom = renderRoutes();\nconst Routes = () => {\n  const history = useHistory();\n  return (\n    <Suspense fallback={<div>加载中...</div>}>\n      <Switch>\n        {renderRoutesDom}\n        <Route\n          render={() => (\n            <Result\n              status='404'\n              title='404'\n              subTitle='对不起，您访问的页面不存在。'\n              extra={\n                <Button type='primary' onClick={() => history.push('/')}>\n                  返回首页\n                </Button>\n              }\n            />\n          )}\n        />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\nexport {\n  allRoute,\n  allPathRoute,\n  pathCantInTab,\n  allRouteName,\n  SigleRoute,\n  SigleRouteName,\n};\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./LayoutHead.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useEffect } from 'react';\nimport { useStores } from '@/hooks/user-stores';\n\nimport { ModalWrapper } from '@/components';\nimport { observer } from 'mobx-react';\nimport { Button, Checkbox, Form, Input, message, Tabs, Tooltip } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\n\nenum TabPaneKey {\n  TabSetting = 'TabSetting',\n  TabUser = 'TabUser',\n}\nexport const SettingModal = observer(() => {\n  const { userStore, issuesStore } = useStores();\n  const [formUser] = useForm();\n  const [formSetting] = useForm();\n  const history = useHistory();\n  window.formUser = formUser;\n  window.formSetting = formSetting;\n\n  const onUserChange = (v: any) => {\n    console.log('change', v);\n    console.log(formUser.getFieldsValue());\n  };\n  const onUserFinish = (v: any) => {\n    console.log(v);\n  };\n  const onSettingChange = (v: any) => {\n    console.log('change', v);\n  };\n  const onSettingFinish = (v: any) => {\n    userStore.setUserRepository({ ...v.userRepository });\n    message.success('更新仓库地址成功');\n    issuesStore.clearPage();\n    issuesStore.getPageData();\n    userStore.setIsShowSetting(false);\n  };\n  const isGuest = userStore.userData.name === 'abearxiong';\n  const toGetRepositoryIdTitle = '获取仓库id方式';\n  // const toGetRepositoryId = () => {\n  //   window.open('/repository');\n  // };\n  useEffect(() => {\n    if (userStore.userData) {\n      const setFormUser = () => {\n        // formUser.setFieldsValue({ user: userStore.userData });\n      };\n      setTimeout(() => {\n        setFormUser();\n      }, 3000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userStore.userData]);\n  const TabUser = (\n    <TabPane tab='用户信息' key='TabUser'>\n      <Form\n        form={formUser}\n        onFinish={onUserFinish}\n        onValuesChange={onUserChange}\n        initialValues={{ user: userStore.userData }}\n      >\n        <Form.Item\n          name={['user', 'name']}\n          label='用户名'\n          labelCol={{ span: 4 }}\n        >\n          <Input disabled value={userStore.userData.name} />\n        </Form.Item>\n        <Form.Item name={['user', 'email']} label='邮箱' labelCol={{ span: 4 }}>\n          <Input disabled value={userStore.userData.email} />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'location']}\n          label='地址'\n          labelCol={{ span: 4 }}\n        >\n          <Input disabled value={userStore.userData.location} />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'websiteUrl']}\n          label='网址'\n          labelCol={{ span: 4 }}\n        >\n          <Input disabled value={userStore.userData.websiteUrl} />\n        </Form.Item>\n        <Form.Item>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            {isGuest && (\n              <div>\n                当前用户为游客，请登录自己账号\n                <Button\n                  onClick={() => {\n                    userStore.postCode(true);\n                  }}\n                >\n                  登录\n                </Button>\n              </div>\n            )}\n            {!isGuest && (\n              <>\n                <Button\n                  type='primary'\n                  onClick={() => {\n                    userStore.postCode(true);\n                  }}\n                >\n                  切换用户\n                </Button>\n                <Button\n                  type='primary'\n                  onClick={() => {\n                    userStore.clearUserinfo();\n                  }}\n                  style={{ marginLeft: 20 }}\n                >\n                  退出登录\n                </Button>\n              </>\n            )}\n          </div>\n        </Form.Item>\n      </Form>\n    </TabPane>\n  );\n  // useEffect(() => {\n  //   if (formSetting && userStore.userRepository) {\n  //     formSetting.setFieldsValue(userStore.userRepository);\n  //   }\n  // }, [formSetting, userStore.userRepository]);\n  const TabSetting = (\n    <TabPane tab='空间设置' key='TabSetting'>\n      <Form\n        form={formSetting}\n        initialValues={{ userRepository: userStore.userRepository }}\n        onFinish={onSettingFinish}\n        onValuesChange={onSettingChange}\n      >\n        <Form.Item\n          name={['userRepository', 'owner']}\n          label='用户名'\n          labelCol={{ span: 4 }}\n          tooltip={'对有写入权限的仓库才具有创建标签的权限'}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['userRepository', 'name']}\n          label='仓库名'\n          labelCol={{ span: 4 }}\n          tooltip={'用户所拥有的仓库的名'}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['userRepository', 'canWrite']}\n          label='拥有者'\n          tooltip={'用户具有写入权限'}\n          labelCol={{ span: 4 }}\n          valuePropName='checked'\n        >\n          <Checkbox>\n            <Tooltip\n              placement='topLeft'\n              title='因为label只能拥有者可以写入, 不勾选后添加label，会报错，没有权限。否则不予修改label'\n              arrowPointAtCenter\n            >\n              能够写入\n            </Tooltip>\n          </Checkbox>\n        </Form.Item>\n        <Form.Item\n          name={['userRepository', 'repositoryId']}\n          label={\n            // <a onClick={toGetRepositoryId} title={toGetRepositoryIdTitle}>\n            // </a>\n            <Link\n              key={'index'}\n              to={'/repository'}\n              target='_blank'\n              title={toGetRepositoryIdTitle}\n            >\n              仓库id\n            </Link>\n          }\n          tooltip={toGetRepositoryIdTitle}\n          labelCol={{ span: 4 }}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button type='primary' htmlType='submit'>\n              确定\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </TabPane>\n  );\n  return (\n    <ModalWrapper\n      visible={userStore.isShowSetting}\n      // visible={true}\n      setVisible={() => userStore.setIsShowSetting(false)}\n      footer={false}\n    >\n      <Tabs type='card' defaultActiveKey={TabPaneKey.TabSetting}>\n        {TabUser}\n        {TabSetting}\n      </Tabs>\n    </ModalWrapper>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\n\nimport { Dropdown, Layout, Menu } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { useStores } from '@/hooks/user-stores';\nimport Styles from './LayoutHead.scss';\nimport { SettingModal } from './SettingModal';\nimport { useHistory } from 'react-router-dom';\nimport { useMount } from 'ahooks';\n\nexport const LayoutHead = observer(() => {\n  const { userStore } = useStores();\n  const history = useHistory();\n  useMount(() => {\n    userStore.postCode();\n  });\n\n  const avatar = (\n    <Avatar src={userStore.userData.avatarUrl} style={{ marginRight: 5 }} />\n  );\n  const UserMenu = (\n    <Menu>\n      <Menu.Item\n        onClick={() => {\n          console.log('user on click');\n          userStore.setIsShowSetting(true);\n        }}\n      >\n        账号管理\n      </Menu.Item>\n\n      <Menu.Item\n        onClick={() => {\n          history.push('/edit/new');\n        }}\n      >\n        新建页面\n      </Menu.Item>\n      <Menu.Item\n        onClick={() => {\n          window.open('https://github.com/abearxiong/space');\n        }}\n      >\n        star github\n      </Menu.Item>\n    </Menu>\n  );\n  const UserInfoComm = (\n    <Dropdown overlay={UserMenu} className={Styles.UserInfoComm}>\n      <div>\n        {avatar} {userStore.userData.name}\n      </div>\n    </Dropdown>\n  );\n  return (\n    <>\n      <Layout.Header className={Styles.LayoutHead} style={{ color: '#fff' }}>\n        <div\n          onClick={() => {\n            history.push('/');\n          }}\n        >\n          Space\n        </div>\n        {UserInfoComm}\n      </Layout.Header>\n      <SettingModal />\n    </>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\n\nimport { LayoutHead } from './layout-head/LayoutHead';\nimport { Layout as AntLayout } from 'antd';\n\nexport type LayoutProp = {\n  children: any;\n} & SimpleObject;\nexport const Layout = observer(({ children }: LayoutProp) => {\n  return (\n    <AntLayout style={{ height: '100%' }}>\n      <LayoutHead />\n      <AntLayout.Content style={{ flexGrow: 1 }}>{children}</AntLayout.Content>\n    </AntLayout>\n  );\n});\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  // HashRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\nimport { ConfigProvider, message } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { UseRequestProvider } from 'ahooks';\nimport Result from 'antd/lib/result';\nimport { Button } from 'antd';\nimport Routes, { SinglePageRoutes } from './route';\nimport { Layout } from '@/layouts/Layouts';\nif (process.env.MOCK) {\n  console.log('引入mockjs');\n  require('./mockjs');\n}\n// message 提示\nmessage.config({\n  maxCount: 1,\n});\n\nwindow.message = message;\n\nconst App = () => {\n  const history = useHistory();\n  return (\n    <ConfigProvider locale={zhCN}>\n      <UseRequestProvider\n        value={{\n          manual: true,\n          throwOnError: true,\n        }}\n      >\n        <Router basename='/space'>\n          <Suspense fallback={<div>加载中...</div>}>\n            <Switch>\n              <Layout>\n                <Routes />\n              </Layout>\n              {SinglePageRoutes.map((item) => {\n                // console.log('route', item);\n                return (\n                  <Route\n                    key={item.pathname}\n                    path={item.path}\n                    component={item.component}\n                  />\n                );\n              })}\n              <Route\n                render={() => (\n                  <Result\n                    status='404'\n                    title='404'\n                    subTitle='对不起，您访问的页面不存在。'\n                    extra={\n                      <Button type='primary' onClick={() => history.push('/')}>\n                        返回首页\n                      </Button>\n                    }\n                  />\n                )}\n              />\n            </Switch>\n          </Suspense>\n        </Router>\n      </UseRequestProvider>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import * as Sentry from '@sentry/react';\n\nexport default Sentry;\n","import Sentry from './sentry';\nimport { getUserinfo } from '@/stores';\n\nconst SentryContext = () => {\n  const { email } = getUserinfo() ?? {};\n  Sentry.setUser({ email });\n};\n\nexport default SentryContext;\n","import React from 'react';\nimport { Result, Button, Typography } from 'antd';\n// import Sentry from './sentry';\n\nconst { Paragraph, Text } = Typography;\n\ntype Props = {\n  error: Error | null;\n  componentStack: string | null;\n  resetError(): void;\n  eventId: string | null;\n};\n\nconst Fallback: React.FC<Props> = ({ error, componentStack, resetError }) => (\n  <React.Fragment>\n    <Result\n      status='error'\n      title='意外错误'\n      subTitle='非常抱歉，您遇到了一些在我们意料之外的错误。'\n      extra={[\n        <Button\n          type='primary'\n          key='console'\n          onClick={() => {\n            resetError();\n          }}\n        >\n          点击重置页面\n        </Button>,\n      ]}\n    >\n      <div>\n        <Paragraph>\n          <Text\n            strong\n            style={{\n              fontSize: 16,\n            }}\n          >\n            您可以尝试点击重置按钮或刷新您的页面。\n          </Text>\n        </Paragraph>\n        <Paragraph>\n          <Text\n            strong\n            style={{\n              fontSize: 16,\n            }}\n          >\n            如果还是出现该问题，请向我们反馈。\n          </Text>\n        </Paragraph>\n      </div>\n    </Result>\n  </React.Fragment>\n);\n\nexport default Fallback;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      // process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport '@github/g-emoji-element';\nimport App from './App';\n// for observer batching\n// import 'mobx-react-lite/batchingForReactDom';\nimport SentryContext from '@/modules/error/sentry-context';\nimport Fallback from '@/modules/error/sentry-fallback';\nimport Sentry from '@/modules/error/sentry';\nimport * as serviceWorker from './serviceWorker';\n\nconst _env = process.env.ENV;\n\n_env !== 'development' &&\n  Sentry.init({\n    dsn:\n      'https://24f9861a9726431c8a151477aed6d0fe@o447167.ingest.sentry.io/5426800',\n    ignoreErrors: ['ResizeObserver loop limit exceeded'],\n    environment: _env,\n  });\n\nSentryContext();\n// <React.StrictMode>\n//   <App />\n// </React.StrictMode>\nReactDOM.render(\n  <Sentry.ErrorBoundary fallback={Fallback} showDialog>\n    <App />\n  </Sentry.ErrorBoundary>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// export const data = Mock.mock('/mock', {\n//   //\"/mock\"是经过ajax获取数据时填写的地址，能够随意写。但要和ajax请求时填写的地址一致。\n//   'userinfo|4': [\n//     {\n//       //生成四个以下格式的数据\n//       'id|+1': 1, //数字从1开始，后续依次加1\n//       name: '@cname', //名字为随机中文名\n//       'age|18-28': 25, //年龄是18-28之间的随机数\n//       'sex|1': ['男', '女'], //性别是数组里的随机一项\n//       'job|1': ['web', 'teacher', 'python', 'php'], //job是数组里的随机一项\n//     },\n//   ],\n// });\n\n// // 输出结果\n// console.log('mockData', data);\nexport const mock = 'MOCK数据';\n","import { Paging, PagingForm } from '@/models';\nimport { FormCache } from '@/utils';\nimport {\n  observable,\n  action,\n  computed,\n  autorun,\n  toJS,\n  makeObservable,\n  // makeObservable,\n} from 'mobx';\n\n// TODO: 浏览器窗口，部分toJS获取数据，以后删除\nwindow.toJS = toJS;\n/**\n * StoreBase\n * 如果要开启缓存，在constructor开启\n *  this.getCache();\n *  this.setCache();\n * 或者，自己手动调用配置\n */\nclass StoreBase<T = any> {\n  name = 'StoreBase';\n  // KEY的作用是对那些唯一化路由处理，比如路由页面/:id不同的\n  // 如果没有不同，一般默认值即可\n  key = 'KEY';\n  Storage = localStorage;\n  time = 60 * 60;\n  // 缓存当前页面数据\n  @observable data: SimpleObject | T = {};\n\n  constructor() {\n    // 第一次获取，同时更新获取时间\n    if (this.name !== 'StoreBase') {\n      // the autocache must handle in children\n      this.getCache();\n      this.setCache();\n    }\n    makeObservable(this, {\n      data: observable,\n      setData: action.bound,\n    });\n    // console.log('storeBase constructor', this.SaveName);\n  }\n  /**\n   *\n   * @param data\n   * @param options: isSet=true是直接覆盖\n   */\n  @action.bound\n  setData(data: any, { isSet = false }: any = {}) {\n    if (isSet) {\n      this.data = data;\n    } else {\n      if (this.data) {\n        this.data = { ...this.data, ...data };\n      } else {\n        this.data = data;\n      }\n    }\n  }\n  @computed get dataToString() {\n    return JSON.stringify(this.data);\n  }\n  @observable dispose: () => any = () => false;\n  // 自动缓存\n  autoCache = () => {\n    // console.groupCollapsed(this.SaveName + ' cache ' + this.name);\n    // console.log('cacheData', this.SaveName, this.data);\n    // console.log('data', toJS(this.data));\n    // console.groupEnd();\n    const data = toJS(this.data);\n    // Object.keys(data as object);\n    data && FormCache.set(data, this.SaveName, this.Storage, this.time);\n  };\n  // 刷新后获取cache 如果需有其他 覆盖\n  getCache = () => {\n    this.data = FormCache.get(this.SaveName, this.Storage) ?? {};\n    // console.log('this.getCache', this.data, toJS(this.data));\n    return this.data;\n  };\n  // 设定缓存\n  setCache = () => {\n    // console.log('this.dispose', this.dispose);\n    // this.dispose && this.dispose();\n    this.dispose = autorun(() => {\n      this.autoCache();\n    });\n  };\n  // 取消缓存\n  cancelCache = () => {\n    // 如果具有自动缓存，取消缓存\n    this.dispose && this.dispose();\n    this.dispose = () => false;\n  };\n  // 清除缓存\n  clearCache = () => {\n    this.data = {};\n    FormCache.clear(this.SaveName, this.Storage);\n  };\n  @computed get SaveName() {\n    return this.name + this.key;\n  }\n}\n/**\n * StorePage\n * 功能\n * 1. 举例:有表格的页面元素\n * 2. 使用作为，默认设定的store（主页，具有表单的）\n * 不具备多个附加类型，孩子页面，使用的表单类型，但是类型类似\n * ----\n * 思考多个数据类型，组件类型应用，建议StorePage\n * 注意： 根据不同的页面，如果有多个的话，建议，多类型处理\n * ------\n */\nclass StorePage<T = any, S = SimpleObject, V = any> extends StoreBase<V> {\n  name = 'StorePage';\n  key = 'KEY';\n  /**\n   * 分页数据\n   */\n  @observable\n  pageData: Paging<T> = {\n    list: [],\n  };\n  /**\n   * 表单数据, 默认为空，refresh会更新（不空）\n   */\n  @observable\n  formData: PagingForm<S> | PagingForm<SimpleObject> | undefined = undefined;\n  /**\n   * 更新表单\n   */\n  @action.bound\n  refresh() {\n    if (this.formData) {\n      this.formData = { ...this.formData };\n    } else {\n      this.formData = {};\n    }\n  }\n  @action.bound\n  setPageData(payload: any) {\n    this.pageData = payload;\n  }\n  @action.bound\n  defaultPageData() {\n    if (this.pageData.list.length > 0) this.pageData = { list: [] };\n  }\n  @action.bound\n  setFormData(payload: any, { isSet = false }: any = {}) {\n    if (isSet) {\n      this.formData = payload;\n      return;\n    }\n    const formData = this.formData;\n    this.formData = { ...formData, ...payload };\n    // console.log('set', this.formData);\n  }\n  @action.bound\n  defaultFormData() {\n    this.formData = undefined;\n  }\n}\n\nexport { StoreBase, StorePage };\n","export const USERINFO = 'UserStore';\n\nexport interface UserData {\n  avatarUrl: string;\n  bio: string;\n  company: string;\n  createdAt: string;\n  email: string;\n  id: string;\n  isCampusExpert: boolean;\n  isDeveloperProgramMember: boolean;\n  isEmployee: boolean;\n  isHireable: boolean;\n  isSiteAdmin: boolean;\n  isViewer: boolean;\n  location: string;\n  login: string;\n  name: string;\n  resourcePath: string;\n  sponsorsListing: string;\n  status?: {\n    id: string;\n    message: string;\n    emoji: string;\n    createdAt: string;\n    updatedAt: string;\n  };\n  twitterUsername: string;\n  updatedAt: string;\n  viewerCanFollow: boolean;\n  websiteUrl: string;\n}\n\nexport const setUserinfo = (data: any) => {\n  // localStorage.setItem(USERINFO, JSON.stringify(data));\n};\nexport const getUserinfo = (): UserData | SimpleObject => {\n  try {\n    const v = JSON.parse(localStorage.getItem(USERINFO) as string) ?? {};\n    return v.userData ?? {};\n  } catch {\n    return {};\n  }\n};\n\nexport const removeUserinfo = () => {\n  localStorage.removeItem(USERINFO);\n};\n","/**\n * 对页面上输入的密码进行加密传输给后台进行验证，对返回的数据进行解密，在页面展示\n */\nimport CryptoJS from 'crypto-js';\n\n/*\n * 对密码进行加密，传输给后台进行验证\n * @param  {String}     word    需要加密的密码\n * @param  {String}     keyStr    对密码加密的秘钥\n * @return {String}     加密的密文\n * */\nexport const encrypt = (word: string, keyStr: string) => {\n  // 加密\n  keyStr = keyStr ? keyStr : 'ABGHNJHGSHUYG12';\n  const key = CryptoJS.enc.Utf8.parse(keyStr);\n  const srcs = CryptoJS.enc.Utf8.parse(word);\n  const encrypted = CryptoJS.AES.encrypt(srcs, key, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7,\n  });\n  return encrypted.toString();\n};\n/*\n * 对加密之后的密文在页面上进行解密，以便用户进行修改\n * @param  {String}     word    需要加密的密码\n * @param  {String}     keyStr    对密码加密的秘钥\n * @return {String}      解密的明文\n * */\nexport const decrypt = (word: string, keyStr: string) => {\n  // 解密\n  keyStr = keyStr ? keyStr : 'ABGHNJHGSHUYG12';\n  const key = CryptoJS.enc.Utf8.parse(keyStr);\n  const decrypt = CryptoJS.AES.decrypt(word, key, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7,\n  });\n  return CryptoJS.enc.Utf8.stringify(decrypt).toString();\n};\n\nwindow.crypt = { encrypt, decrypt };\n","import { LOGIN_USER } from './../../graphql/user/LOGIN_USER';\nimport { message } from 'antd';\nimport { StoreBase } from '@/models';\nimport { observable, action, makeObservable, computed } from 'mobx';\nimport { USERINFO, UserData } from './userinfo';\nimport { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\n// import CryptoJS from 'crypto-js';\n// const CryptoJS = require('crypto-js');\nimport { encrypt, decrypt } from '@/utils/crypto';\nimport { unionBy } from 'lodash-es';\nimport { GithubToken } from 'think-space-oauth';\nimport { history } from '@/utils';\n// 默认配置的token，权限只有查看公共的库。\n// 个人的token，登录更改\n// sxiongxiao\n// aOTlkW6kabeSzhohDeKAZJz/HT9Ws7/MordiD83KYAK6ijOsaLMDXnzo2YmAEhNN\n// abearxiong\n// bt1247BD3B5C3UHkZQlzSDHN5IAIPPg1WpdOFvlfRhS/Mu1A5Ozn1x6xeRiKOymI\nconst defaultToken =\n  'aOTlkW6kabeSzhohDeKAZJz/HT9Ws7/MordiD83KYAK6ijOsaLMDXnzo2YmAEhNN';\n\nexport type UserInfo = UserData;\nexport type PageInfo = {\n  endCursor: string;\n  hasNextPage: boolean;\n  hasPreviousPage: false;\n  startCursor: string;\n  [key: string]: any;\n};\nexport type SpaceData = {\n  node: {\n    id: string;\n  } & SimpleObject;\n};\n/**\n * name 仓库名字\n * owner 仓库拥有者\n */\nexport type UserRepository = {\n  name: string; // 仓库名字\n  owner: string; // 仓库拥有者\n  canWrite: boolean; // 能否写入\n} & SimpleObject;\n\nconst userRepository: UserRepository = {\n  owner: 'abearxiong', // 仓库拥有者\n  name: 'abearxiong.github.io', // 仓库名字\n  repositoryId: 'MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=',\n  canWrite: true,\n};\nexport class UserStore extends StoreBase {\n  @observable name = USERINFO;\n  @observable key = 'xx-space';\n  @observable time = 365 * 24 * 60 * 60;\n\n  constructor() {\n    super();\n    this.getCache();\n\n    this.getSave();\n\n    this.connect();\n\n    this.setCache();\n    makeObservable(this, {\n      userRepository: observable,\n      setUserRepository: action.bound,\n      // pageInfo: observable,\n      userData: observable,\n      isShowSetting: observable,\n      setIsShowSetting: action.bound,\n    });\n    // makeObservable(this);\n  }\n\n  @observable token = defaultToken;\n\n  @observable client_id = 'ccf21c3104b11fcd9219';\n  @observable client_id_local = '6d1f0f1a67b21e729050'; //  xx-space-local-dev\n  // @observable client_sercret = ''\n  @action.bound\n  postCode(login = false) {\n    let client_id;\n    if (location.href.match(/localhost/)) {\n      client_id = this.client_id_local;\n    } else {\n      client_id = this.client_id;\n    }\n    // client_id = this.client_id;\n    const a = GithubToken({\n      proxyUrl: 'http://message.xiongxiao.me/cors/',\n      useQueryUrl: true,\n      client_id,\n    });\n    if (login) {\n      a.logout();\n    }\n    const isNext = a.isNext();\n    if (isNext || login) {\n      a.auto().then((res) => {\n        const token = a.getToken();\n        if (token) {\n          this.setToken(token);\n          message.success('登录成功');\n          setTimeout(() => {\n            //uitls的需要绑定 createHistory\n            history.push('/space/');\n          }, 2000);\n        } else {\n          // this.postCode();\n          if (isNext) {\n            message.error('登录失败，请重新登陆');\n            setTimeout(() => {\n              history.push('/space/');\n            }, 3000);\n          }\n        }\n      });\n    }\n  }\n\n  /**1\n   * 登陆用户的用户信息\n   */\n  @observable userData: UserData | SimpleObject = {};\n  isShowSetting = false;\n  setIsShowSetting(v: boolean) {\n    this.isShowSetting = v;\n  }\n  @observable client: ApolloClient<any> | undefined;\n  @computed get variables() {\n    return {\n      ...this.userRepository,\n    };\n  }\n  /** 连接client\n   * 设置client\n   */\n  @action.bound\n  connect = () => {\n    this.setClient();\n  };\n  @action.bound\n  setClient = () => {\n    if (!this.token) {\n      return;\n    }\n    const githubToken = this.githubToken();\n    const httpLink = new HttpLink({\n      uri: 'https://api.github.com/graphql', // 配置请求url\n      headers: {\n        // 配置header\n        Authorization: `Bearer ${githubToken}`,\n      },\n    });\n    if (this.client) this.client = undefined;\n\n    this.client = new ApolloClient({\n      link: httpLink,\n      // cache: new InMemoryCache(),\n      cache: new InMemoryCache({\n        typePolicies: {\n          Query: {\n            fields: {\n              project: {\n                merge(existing, incoming) {\n                  // return incoming;\n                  return { ...existing, ...incoming };\n                },\n              },\n            },\n          },\n          Repository: {\n            fields: {\n              issues: {\n                merge(existing, incoming) {\n                  if (!existing) return incoming;\n                  console.log('existing', existing);\n                  console.log('incoming', incoming);\n                  const edges = incoming.edges ? [...incoming.edges] : [];\n                  // const pageInfo = incoming.pageInfo;\n                  // if (pageInfo && !isLatest) this.pageInfo = pageInfo;\n\n                  if (edges) {\n                    let pageData = [...existing.edges];\n                    if (pageData.length === 0) {\n                      pageData = edges;\n                    } else {\n                      const newEdges = unionBy(\n                        edges.reverse(),\n                        pageData.reverse(),\n                        'node.id',\n                      );\n                      pageData = newEdges.reverse();\n                    }\n                    return { ...incoming, edges: pageData };\n                  }\n                  return incoming;\n                },\n              },\n            },\n            // keyFields: ['id'],\n          },\n        },\n      }),\n    });\n    this.client\n      .query({\n        query: LOGIN_USER,\n      })\n      .then((res) => {\n        if (res.data && res.data.viewer) {\n          this.userData = res.data.viewer;\n        }\n      });\n    return this.client;\n  };\n  @action.bound\n  githubToken() {\n    if (!this.token) {\n      //\n      return '';\n    }\n    const setToken = decrypt(this.token, this.key);\n    // return '86c5916da4c66dc5108797bff15a5c27ca65fb2c';\n    // console.log(encrypt('86c5916da4c66dc5108797bff15a5c27ca65fb2c', this.key));\n    return setToken;\n  }\n  @action.bound\n  setToken(token: string) {\n    this.token = encrypt(token, this.key);\n    this.updateData();\n    // token 更新重新连接\n    this.connect();\n  }\n  @computed get GithubToken() {\n    return decrypt(this.token, this.key);\n  }\n  @action.bound\n  setUserData(v: UserData, update = true) {\n    this.userData = { ...this.userData, ...v };\n    update && this.updateData();\n  }\n\n  // 获取缓存信息\n  @action.bound\n  getSave() {\n    const data: any = this.data;\n    const { userData = {}, userRepository, token } = data;\n    this.setUserData(userData, false);\n    if (userRepository) {\n      this.setUserRepository(userRepository, false);\n    }\n    if (token) {\n      this.token = encrypt(token, this.key);\n    }\n  }\n  // 更新本地的信息进缓存当中\n  @action.bound\n  updateData(v: any = {}) {\n    this.data = {\n      ...this.data,\n      userData: this.userData,\n      userRepository: this.userRepository,\n      token: decrypt(this.token, this.key),\n      ...v,\n    };\n  }\n\n  // 清除用户信息\n  @action.bound\n  clearUserinfo() {\n    this.userData = {};\n    this.setToken(decrypt(defaultToken, this.key));\n    this.userRepository = userRepository;\n    this.clearCache();\n  }\n\n  // 显示仓库信息\n  // 仓库名字\n  userRepository: UserRepository = userRepository;\n  setUserRepository(v: any, update = true) {\n    this.userRepository = { ...userRepository, ...v };\n    update && this.updateData();\n  }\n}\n","const DEFAULTCACHENAME = 'CACHE_NAME';\nenum StorageEnum {\n  LOCAL,\n  SESSION,\n}\nconst FormCache = {\n  Storage(flag = StorageEnum.LOCAL) {\n    switch (flag) {\n      case StorageEnum.LOCAL:\n        return localStorage;\n      case StorageEnum.SESSION:\n        return sessionStorage;\n      default:\n        return localStorage;\n    }\n  },\n  set: (\n    params: SimpleObject = {},\n    name = DEFAULTCACHENAME,\n    storage = localStorage,\n    time: number = 60 * 60,\n  ) => {\n    if (!params) return;\n    // time 缓存有效时间为一个小时\n    const endDate = new Date().valueOf() + time * 1000;\n    params.localUpdateTime = endDate;\n    const str = JSON.stringify(params);\n    storage.setItem(name, str);\n  },\n  get: (name = DEFAULTCACHENAME, storage = localStorage) => {\n    const str = storage.getItem(name);\n    if (!str) return;\n    // console.log('str', str);\n    try {\n      const parseJson = JSON.parse(str);\n      const localUpdateTime = parseJson?.localUpdateTime ?? '';\n      if (localUpdateTime) {\n        if (new Date().valueOf() > Number(localUpdateTime)) {\n          // 当前时间大于有效时间就是有问题，清除\n          FormCache.clear(name, storage);\n          return null;\n        }\n      }\n      delete parseJson['localUpdateTime'];\n      return parseJson;\n    } catch {\n      return null;\n    }\n  },\n  clear: (name = DEFAULTCACHENAME, storage = localStorage) => {\n    storage.removeItem(name);\n  },\n};\n\nexport { FormCache };\nwindow.cache = FormCache;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n\nexport { history };\n\n/**\n * 转到其他页面\n *\n * open(\n *  url?: string | undefined,\n *  target?: string | undefined,\n *  features?: string | undefined,\n *  replace?: boolean | undefined\n * ): Window | null\n *\n * @param url 地址url，https\n */\nconst toUrl = (url: string, ...options: any[]) => {\n  window.open(url, ...options);\n};\n\nexport { toUrl };\n","type ToCheckParam = {\n  reg: RegExp | string | Reg;\n  value: string;\n  message: string;\n  isPromise: boolean;\n};\n\ntype CheckVaild = {\n  reg: RegExp;\n  value: string;\n  message: string;\n  isPromise: boolean;\n};\ntype Reg = {\n  pattern: RegExp;\n  message: string;\n};\nconst checkVaild = ({ reg, value, message, isPromise }: CheckVaild) => {\n  if (isPromise) {\n    if (!reg.test(value)) {\n      return Promise.reject(message);\n    }\n    return Promise.resolve();\n  } else {\n    return Promise.resolve(reg.test(value));\n  }\n};\n\ntype Check = {\n  Bank: Reg;\n  Email: Reg;\n  NumMillion: Reg;\n  NumGT1: Reg;\n  NumGT10: Reg;\n  Num: Reg;\n  Money: Reg;\n  Password: Reg;\n  Phone: Reg;\n  StrNoOtherChars: Reg;\n  Url: Reg;\n  HTML: Reg;\n  [key: string]: Reg;\n};\ntype CheckNum = {\n  NumGT0: Reg;\n};\nconst checkNum: CheckNum = {\n  NumGT0: {\n    pattern: /^\\-\\d+$/,\n    message: '必须小于0',\n  },\n};\ntype CheckShop = {\n  // 自定义url\n  IsPinduoduoUrl: Reg;\n  IsPinGoodId: Reg;\n  IsTaobaoUrl: Reg;\n  IsTaobaoId: Reg;\n  IsTmallUrl: Reg;\n  IsTmallId: Reg;\n};\nconst checkShop: CheckShop = {\n  IsPinduoduoUrl: {\n    pattern: /yangkeduo\\.com/,\n    message: '拼多多url',\n  },\n  IsPinGoodId: {\n    pattern: /^(https?:\\/\\/)[\\d\\D]*yangkeduo\\.com[\\d\\D]*goods_id=\\d{5,12}$/,\n    message: '',\n  },\n  IsTaobaoUrl: { pattern: /taobao\\.com/, message: '淘宝url' },\n  IsTaobaoId: {\n    pattern: /^(https?:\\/\\/)[\\d\\D]*taobao\\.com[\\d\\D]*id=\\d{12}$/,\n    message: '',\n  },\n  IsTmallUrl: { pattern: /tmall\\.com/, message: '天猫url' },\n  IsTmallId: {\n    pattern: /^(https?:\\/\\/)[\\d\\D]*tmall\\.com[\\d\\D]*id=\\d{12}$/,\n    message: '',\n  },\n};\ntype CheckString = {\n  WeChat: Reg;\n};\n// 微信官方定义的微信号规则\n// 1、可使用6-20个字母、数字、下划线和减号；\n// 2、必须以字母开头（字母不区分大小写）；\n// 3、不支持设置中文。\n\nconst checkString: CheckString = {\n  WeChat: {\n    pattern: /^[a-zA-Z][a-zA-Z\\d_-]{5,19}$/,\n    message: '请输入正确的微信号',\n  },\n};\nconst check: Check & CheckShop & CheckNum & CheckString = {\n  Bank: { pattern: /^\\d{10,28}$/, message: '请输入正确的银行卡号' },\n  Email: {\n    pattern: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n    message: '请输入正确的邮箱',\n  },\n  HTML: { pattern: /<\\/?[a-z][\\s\\S]*>/i, message: 'HTML标签' },\n  NumMillion: {\n    pattern: /^(\\d{1,6}(\\.\\d{1,2})|\\d{1,6})$/,\n    message: '精确小数点后2位,最大不超过百万',\n  },\n  NumGT1: {\n    pattern: /^\\+?[1-9]\\d*$/,\n    message: '不能小于1',\n  },\n  NumGT10: {\n    pattern: /^\\+?[1-9][0-9]\\d*$/,\n    message: '不能小于10',\n  },\n  Num: {\n    pattern: /^\\d+$/,\n    message: '只能是数字',\n  },\n  Money: {\n    pattern: /^(\\+)?\\d+.\\d{2}$/,\n    message: '保留两位小数的钱',\n  },\n  Password: {\n    pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,16}$/,\n    message: '密码',\n  },\n  Phone: {\n    pattern: /^1[3-9]\\d{9}$/,\n    message: '手机号',\n  },\n  StrNoOtherChars: {\n    pattern: /^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/,\n    message: '标题不能含有特殊字符',\n  },\n  Url: {\n    pattern: /^(https?:\\/\\/(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\\.)+[a-zA-Z]+)(:\\d+)?(\\/.*)?(\\?.*)?(#.*)?$/,\n    message: 'url验证',\n  },\n  ...checkShop,\n  ...checkNum,\n  ...checkString,\n};\nconst Copywriting = {\n  check,\n};\n\n/**\n * 检查类型\n * @param ToCheckParam检查参数\n */\nconst toCheck = ({\n  reg,\n  value,\n  message = '',\n  isPromise = false,\n}: ToCheckParam) => {\n  if (typeof reg === 'string') {\n    const s: string = reg;\n    reg = check[s]?.pattern;\n    message = message || (check[s]?.message ?? '');\n    if (!reg) throw `reg: [${s}] 不存在`;\n    return checkVaild({ reg, value, message, isPromise });\n  } else if ('pattern' in reg) {\n    return checkVaild({ reg: (reg as Reg).pattern, value, message, isPromise });\n  }\n  return checkVaild({ reg, value, message, isPromise });\n};\n\ntype ToCheckPattern = {\n  reg: string | Reg | RegExp;\n  message?: string;\n};\n/**\n * 返回pattern的类型，主要使用在form表单当中\n * @param ToCheckParam\n */\nconst toCheckPattern = ({ reg, message = '' }: ToCheckPattern): Reg => {\n  if (typeof reg === 'string') {\n    const s: string = reg;\n    reg = check[s]?.pattern;\n    message = message || (check[s]?.message ?? '');\n    if (!reg) throw `reg: [${s}] 不存在`;\n    return { pattern: reg, message };\n  } else {\n    message = message || ((reg as Reg).message ?? '');\n    return { pattern: (reg as Reg).pattern, message };\n  }\n};\n\nexport { check, Copywriting, toCheck, toCheckPattern };\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body{margin:0;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",\\\"Roboto\\\",\\\"Oxygen\\\",\\\"Ubuntu\\\",\\\"Cantarell\\\",\\\"Fira Sans\\\",\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}code{font-family:source-code-pro,Menlo,Monaco,Consolas,\\\"Courier New\\\",monospace}body #root{height:100%;margin:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.scss\"],\"names\":[],\"mappings\":\"AAAA,KACE,QAAA,CACA,mJAAA,CAGA,kCAAA,CACA,iCAAA,CAGF,KACE,yEAAA,CAME,WACE,WAAA,CACA,QAAA\",\"sourcesContent\":[\"body {\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\r\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\r\\n    sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  :global {\\r\\n    #root {\\r\\n      height: 100%;\\r\\n      margin: 0;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".LayoutHead__LayoutHead___2T0yW{display:flex;justify-content:space-between}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/layouts/layout-head/LayoutHead.scss\"],\"names\":[],\"mappings\":\"AAAA,gCACE,YAAA,CACA,6BAAA\",\"sourcesContent\":[\".LayoutHead {\\n  display: flex;\\n  justify-content: space-between;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"LayoutHead\": \"LayoutHead__LayoutHead___2T0yW\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}