{"version":3,"sources":["webpack://space/./node_modules/@github/g-emoji-element/dist/index.js","webpack://space/./node_modules/diff-match-patch/index.js","webpack://space/./node_modules/dom-align/dist-web/index.js","webpack://space/./node_modules/fast-json-stable-stringify/index.js"],"names":["supported","Set","isModifiable","emoji","has","ZERO_WIDTH_JOINER","removeTone","filter","ch","isTone","codePointAt","join","tint","tone","points","map","p","splice","String","fromCodePoint","point","toneModifier","id","GEmojiElement","HTMLElement","this","firstElementChild","HTMLImageElement","getAttribute","split","value","parseInt","modifiers","setAttribute","image","onWindows7","test","navigator","userAgent","onWindows8","onWindows81","onFreeBSD","onLinux","isEmojiSupported","src","textContent","el","document","createElement","className","alt","height","width","emojiImage","appendChild","hasAttribute","updateTone","name","tones","x","length","sequence","sequenceWithToneRemoved","modifier","applyTone","t","shift","applyTones","window","customElements","get","define","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","Diff","op","text","prototype","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","Date","getTime","deadline","Error","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","push","diff_cleanupMerge","longtext","shorttext","i","indexOf","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","a","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","subDiff","j","pop","text1_length","text2_length","max_d","Math","ceil","v_offset","v_length","v1","Array","v2","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","y","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","line","hasOwnProperty","undefined","fromCharCode","maxLines","charCodeAt","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastEquality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","max","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","match","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","replace","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","data","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","param","decodeURI","ex","n","isNaN","match_main","match_bitap_","s","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","start","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","index2","index1","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","m","sign","toString","module","exports","_typeof","obj","Symbol","iterator","constructor","_defineProperty","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","vendorPrefix","jsCssMap","Webkit","Moz","ms","O","getVendorPrefix","style","getTransitionName","getTransformName","setTransitionProperty","node","transitionProperty","setTransform","transform","getComputedStyleX","matrix2d","matrix3d","forceRelayout","elem","originalStyle","display","offsetHeight","css","v","getScroll","w","top","ret","method","documentElement","body","getScrollLeft","getScrollTop","getOffset","pos","box","doc","ownerDocument","docElem","getBoundingClientRect","left","clientLeft","clientTop","getClientPosition","defaultView","parentWindow","isWindow","getDocument","nodeType","_RE_NUM_NO_PX","RegExp","source","RE_POS","getOffsetDirection","dir","option","useCssRight","useCssBottom","oppositeOffsetDirection","setLeftTop","offset","position","presetH","presetV","horizontalProperty","verticalProperty","oppositeHorizontalProperty","oppositeVerticalProperty","originalTransition","originalOffset","old","preset","off","_key","_dir","_off","setTransform$1","originalXY","getComputedStyle","getPropertyValue","matrix","parseFloat","getTransformXY","resultXY","xy","arr","match2d","item","setTransformXY","each","fn","isBorderBoxFn","cs","computedStyle","val","rsLeft","pixelLeft","BOX_MODELS","swap","options","callback","call","getPBMWidth","props","which","prop","cssProp","domUtils","getParent","element","parent","host","parentNode","getWH","extra","viewportWidth","viewportHeight","docWidth","docHeight","borderBoxValue","isBorderBox","cssBoxValue","borderBoxValueOrIsBorderBox","slice","refWin","win","documentElementProp","compatMode","cssShow","visibility","getWHIgnoreDisplay","_len","arguments","args","_key2","offsetWidth","mix","to","from","first","toUpperCase","includeMargin","utils","getWindow","setTimeout","ignoreShake","oriOffset","oLeft","toFixed","oTop","tLeft","tTop","useCssTransform","setOffset","clone","overflow","getWindowScrollLeft","getWindowScrollTop","merge","getOffsetParent","positionStyle","nodeName","toLowerCase","getParent$1","getVisibleRectForElement","alwaysByViewport","visibleRect","right","Infinity","bottom","clientWidth","clientHeight","originalPosition","scrollX","scrollY","documentWidth","scrollWidth","documentHeight","scrollHeight","bodyStyle","overflowX","innerWidth","overflowY","innerHeight","isAncestorFixed","maxVisibleWidth","maxVisibleHeight","getRegion","h","outerWidth","outerHeight","getAlignOffset","region","align","V","H","getElFuturePos","elRegion","refNodeRegion","targetOffset","p1","p2","diff","round","isFailX","elFuturePos","isFailY","flip","reg","flipOffset","index","convertOffset","str","offsetLen","normalizeOffset","doAlign","tgtRegion","isTgtRegionVisible","newOverflowCfg","fail","newElRegion","adjustX","adjustY","newPoints","l","r","newOffset","newTargetOffset","isCompleteFailX","_newPoints","b","_newOffset","_newTargetOffset","isCompleteFailY","isStillFailX","isStillFailY","_newPoints2","size","resizeWidth","resizeHeight","adjustForViewport","alignElement","refNode","target","targetRegion","isOutOfVisibleRect","alignPoint","tgtPoint","pageX","pageY","clientX","clientY","pointInView","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread2","__getOffsetParent","__getVisibleRectForElement","opts","cmp","f","cycles","aobj","bobj","seen","stringify","toJSON","isFinite","JSON","out","isArray","TypeError","seenIndex","sort"],"mappings":"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","file":"scripts/vendors~536eaa00.de1cd.bundule.js","sourcesContent":["function isEmojiSupported() {\n    const onWindows7 = /\\bWindows NT 6.1\\b/.test(navigator.userAgent);\n    const onWindows8 = /\\bWindows NT 6.2\\b/.test(navigator.userAgent);\n    const onWindows81 = /\\bWindows NT 6.3\\b/.test(navigator.userAgent);\n    const onFreeBSD = /\\bFreeBSD\\b/.test(navigator.userAgent);\n    const onLinux = /\\bLinux\\b/.test(navigator.userAgent) && !/\\bAndroid\\b/.test(navigator.userAgent);\n    return !(onWindows7 || onWindows8 || onWindows81 || onLinux || onFreeBSD);\n}\n\nconst supported = new Set([\n    '👋',\n    '🤚',\n    '🖐️',\n    '✋',\n    '🖖',\n    '👌',\n    '🤏',\n    '✌️',\n    '🤞',\n    '🤟',\n    '🤘',\n    '🤙',\n    '👈',\n    '👉',\n    '👆',\n    '🖕',\n    '👇',\n    '☝️',\n    '👍',\n    '👎',\n    '✊',\n    '👊',\n    '🤛',\n    '🤜',\n    '👏',\n    '🙌',\n    '👐',\n    '🤲',\n    '🙏',\n    '✍️',\n    '💅',\n    '🤳',\n    '💪',\n    '🦵',\n    '🦶',\n    '👂',\n    '🦻',\n    '👃',\n    '👶',\n    '🧒',\n    '👦',\n    '👧',\n    '🧑',\n    '👱',\n    '👨',\n    '🧔',\n    '👱‍♂️',\n    '👨‍🦰',\n    '👨‍🦱',\n    '👨‍🦳',\n    '👨‍🦲',\n    '👩',\n    '👱‍♀️',\n    '👩‍🦰',\n    '👩‍🦱',\n    '👩‍🦳',\n    '👩‍🦲',\n    '🧓',\n    '👴',\n    '👵',\n    '🙍',\n    '🙍‍♂️',\n    '🙍‍♀️',\n    '🙎',\n    '🙎‍♂️',\n    '🙎‍♀️',\n    '🙅',\n    '🙅‍♂️',\n    '🙅‍♀️',\n    '🙆',\n    '🙆‍♂️',\n    '🙆‍♀️',\n    '💁',\n    '💁‍♂️',\n    '💁‍♀️',\n    '🙋',\n    '🙋‍♂️',\n    '🙋‍♀️',\n    '🧏',\n    '🧏‍♂️',\n    '🧏‍♀️',\n    '🙇',\n    '🙇‍♂️',\n    '🙇‍♀️',\n    '🤦',\n    '🤦‍♂️',\n    '🤦‍♀️',\n    '🤷',\n    '🤷‍♂️',\n    '🤷‍♀️',\n    '👨‍⚕️',\n    '👩‍⚕️',\n    '👨‍🎓',\n    '👩‍🎓',\n    '👨‍🏫',\n    '👩‍🏫',\n    '👨‍⚖️',\n    '👩‍⚖️',\n    '👨‍🌾',\n    '👩‍🌾',\n    '👨‍🍳',\n    '👩‍🍳',\n    '👨‍🔧',\n    '👩‍🔧',\n    '👨‍🏭',\n    '👩‍🏭',\n    '👨‍💼',\n    '👩‍💼',\n    '👨‍🔬',\n    '👩‍🔬',\n    '👨‍💻',\n    '👩‍💻',\n    '👨‍🎤',\n    '👩‍🎤',\n    '👨‍🎨',\n    '👩‍🎨',\n    '👨‍✈️',\n    '👩‍✈️',\n    '👨‍🚀',\n    '👩‍🚀',\n    '👨‍🚒',\n    '👩‍🚒',\n    '👮',\n    '👮‍♂️',\n    '👮‍♀️',\n    '🕵️',\n    '🕵️‍♂️',\n    '🕵️‍♀️',\n    '💂',\n    '💂‍♂️',\n    '💂‍♀️',\n    '👷',\n    '👷‍♂️',\n    '👷‍♀️',\n    '🤴',\n    '👸',\n    '👳',\n    '👳‍♂️',\n    '👳‍♀️',\n    '👲',\n    '🧕',\n    '🤵',\n    '👰',\n    '🤰',\n    '🤱',\n    '👼',\n    '🎅',\n    '🤶',\n    '🦸',\n    '🦸‍♂️',\n    '🦸‍♀️',\n    '🦹',\n    '🦹‍♂️',\n    '🦹‍♀️',\n    '🧙',\n    '🧙‍♂️',\n    '🧙‍♀️',\n    '🧚',\n    '🧚‍♂️',\n    '🧚‍♀️',\n    '🧛',\n    '🧛‍♂️',\n    '🧛‍♀️',\n    '🧜',\n    '🧜‍♂️',\n    '🧜‍♀️',\n    '🧝',\n    '🧝‍♂️',\n    '🧝‍♀️',\n    '💆',\n    '💆‍♂️',\n    '💆‍♀️',\n    '💇',\n    '💇‍♂️',\n    '💇‍♀️',\n    '🚶',\n    '🚶‍♂️',\n    '🚶‍♀️',\n    '🧍',\n    '🧍‍♂️',\n    '🧍‍♀️',\n    '🧎',\n    '🧎‍♂️',\n    '🧎‍♀️',\n    '👨‍🦯',\n    '👩‍🦯',\n    '👨‍🦼',\n    '👩‍🦼',\n    '👨‍🦽',\n    '👩‍🦽',\n    '🏃',\n    '🏃‍♂️',\n    '🏃‍♀️',\n    '💃',\n    '🕺',\n    '🕴️',\n    '🧖',\n    '🧖‍♂️',\n    '🧖‍♀️',\n    '🧗',\n    '🧗‍♂️',\n    '🧗‍♀️',\n    '🏇',\n    '🏂',\n    '🏌️',\n    '🏌️‍♂️',\n    '🏌️‍♀️',\n    '🏄',\n    '🏄‍♂️',\n    '🏄‍♀️',\n    '🚣',\n    '🚣‍♂️',\n    '🚣‍♀️',\n    '🏊',\n    '🏊‍♂️',\n    '🏊‍♀️',\n    '⛹️',\n    '⛹️‍♂️',\n    '⛹️‍♀️',\n    '🏋️',\n    '🏋️‍♂️',\n    '🏋️‍♀️',\n    '🚴',\n    '🚴‍♂️',\n    '🚴‍♀️',\n    '🚵',\n    '🚵‍♂️',\n    '🚵‍♀️',\n    '🤸',\n    '🤸‍♂️',\n    '🤸‍♀️',\n    '🤽',\n    '🤽‍♂️',\n    '🤽‍♀️',\n    '🤾',\n    '🤾‍♂️',\n    '🤾‍♀️',\n    '🤹',\n    '🤹‍♂️',\n    '🤹‍♀️',\n    '🧘',\n    '🧘‍♂️',\n    '🧘‍♀️',\n    '🛀',\n    '🛌',\n    '🧑‍🤝‍🧑',\n    '👭',\n    '👫',\n    '👬'\n]);\nfunction isModifiable(emoji) {\n    return supported.has(emoji);\n}\n\nconst ZERO_WIDTH_JOINER = '\\u{200d}';\nconst VARIATION_16 = 0xfe0f;\nfunction applyTone(sequence, tone) {\n    const sequenceWithToneRemoved = removeTone(sequence);\n    if (!isModifiable(sequenceWithToneRemoved))\n        return sequence;\n    const modifier = toneModifier(tone);\n    if (!modifier)\n        return sequence;\n    return sequenceWithToneRemoved\n        .split(ZERO_WIDTH_JOINER)\n        .map(emoji => (isModifiable(emoji) ? tint(emoji, modifier) : emoji))\n        .join(ZERO_WIDTH_JOINER);\n}\nfunction applyTones(sequence, tones) {\n    const sequenceWithToneRemoved = removeTone(sequence);\n    if (!isModifiable(sequenceWithToneRemoved))\n        return sequence;\n    const modifiers = tones.map(t => toneModifier(t));\n    return sequenceWithToneRemoved\n        .split(ZERO_WIDTH_JOINER)\n        .map(emoji => {\n        if (!isModifiable(emoji))\n            return emoji;\n        const modifier = modifiers.shift();\n        return modifier ? tint(emoji, modifier) : emoji;\n    })\n        .join(ZERO_WIDTH_JOINER);\n}\nfunction removeTone(emoji) {\n    return [...emoji].filter(ch => !isTone(ch.codePointAt(0))).join('');\n}\nfunction tint(emoji, tone) {\n    const points = [...emoji].map(p => p.codePointAt(0));\n    if (points[1] && (isTone(points[1]) || points[1] === VARIATION_16)) {\n        points[1] = tone;\n    }\n    else {\n        points.splice(1, 0, tone);\n    }\n    return String.fromCodePoint(...points);\n}\nfunction isTone(point) {\n    return point >= 0x1f3fb && point <= 0x1f3ff;\n}\nfunction toneModifier(id) {\n    switch (id) {\n        case 1:\n            return 0x1f3fb;\n        case 2:\n            return 0x1f3fc;\n        case 3:\n            return 0x1f3fd;\n        case 4:\n            return 0x1f3fe;\n        case 5:\n            return 0x1f3ff;\n        default:\n            return null;\n    }\n}\n\nclass GEmojiElement extends HTMLElement {\n    get image() {\n        if (this.firstElementChild instanceof HTMLImageElement) {\n            return this.firstElementChild;\n        }\n        else {\n            return null;\n        }\n    }\n    get tone() {\n        return (this.getAttribute('tone') || '')\n            .split(' ')\n            .map(value => {\n            const tone = parseInt(value, 10);\n            return tone >= 0 && tone <= 5 ? tone : 0;\n        })\n            .join(' ');\n    }\n    set tone(modifiers) {\n        this.setAttribute('tone', modifiers);\n    }\n    connectedCallback() {\n        if (this.image === null && !isEmojiSupported()) {\n            const src = this.getAttribute('fallback-src');\n            if (src) {\n                this.textContent = '';\n                const image = emojiImage(this);\n                image.src = src;\n                this.appendChild(image);\n            }\n        }\n        if (this.hasAttribute('tone')) {\n            updateTone(this);\n        }\n    }\n    static get observedAttributes() {\n        return ['tone'];\n    }\n    attributeChangedCallback(name) {\n        switch (name) {\n            case 'tone':\n                updateTone(this);\n                break;\n        }\n    }\n}\nfunction updateTone(el) {\n    if (el.image)\n        return;\n    const tones = el.tone.split(' ').map(x => parseInt(x, 10));\n    if (tones.length === 0) {\n        el.textContent = removeTone(el.textContent || '');\n    }\n    else if (tones.length === 1) {\n        const tone = tones[0];\n        el.textContent = tone === 0 ? removeTone(el.textContent || '') : applyTone(el.textContent || '', tone);\n    }\n    else {\n        el.textContent = applyTones(el.textContent || '', tones);\n    }\n}\nfunction emojiImage(el) {\n    const image = document.createElement('img');\n    image.className = 'emoji';\n    image.alt = el.getAttribute('alias') || '';\n    image.height = 20;\n    image.width = 20;\n    return image;\n}\nif (!window.customElements.get('g-emoji')) {\n    window.GEmojiElement = GEmojiElement;\n    window.customElements.define('g-emoji', GEmojiElement);\n}\n\nexport default GEmojiElement;\n","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n};\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\ndiff_match_patch.Diff = function(op, text) {\n  return [op, text];\n};\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)),\n             new diff_match_patch.Diff(DIFF_EQUAL, shorttext),\n             new diff_match_patch.Diff(DIFF_INSERT,\n                 longtext.substring(i + shorttext.length))];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n            new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)],\n                          diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff =\n              this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n          pointer = pointer + subDiff.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n          new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  // Allocate 2/3rds of the space for text1, the rest for text2.\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n    diffs[i][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastEquality && (lastEquality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastEquality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastEquality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastEquality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastEquality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n                    text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] =\n              new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] =\n          new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar vendorPrefix;\nvar jsCssMap = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  // IE did it wrong again ...\n  ms: '-ms-',\n  O: '-o-'\n};\n\nfunction getVendorPrefix() {\n  if (vendorPrefix !== undefined) {\n    return vendorPrefix;\n  }\n\n  vendorPrefix = '';\n  var style = document.createElement('p').style;\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      vendorPrefix = key;\n    }\n  }\n\n  return vendorPrefix;\n}\n\nfunction getTransitionName() {\n  return getVendorPrefix() ? \"\".concat(getVendorPrefix(), \"TransitionProperty\") : 'transitionProperty';\n}\n\nfunction getTransformName() {\n  return getVendorPrefix() ? \"\".concat(getVendorPrefix(), \"Transform\") : 'transform';\n}\nfunction setTransitionProperty(node, value) {\n  var name = getTransitionName();\n\n  if (name) {\n    node.style[name] = value;\n\n    if (name !== 'transitionProperty') {\n      node.style.transitionProperty = value;\n    }\n  }\n}\n\nfunction setTransform(node, value) {\n  var name = getTransformName();\n\n  if (name) {\n    node.style[name] = value;\n\n    if (name !== 'transform') {\n      node.style.transform = value;\n    }\n  }\n}\n\nfunction getTransitionProperty(node) {\n  return node.style.transitionProperty || node.style[getTransitionName()];\n}\nfunction getTransformXY(node) {\n  var style = window.getComputedStyle(node, null);\n  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());\n\n  if (transform && transform !== 'none') {\n    var matrix = transform.replace(/[^0-9\\-.,]/g, '').split(',');\n    return {\n      x: parseFloat(matrix[12] || matrix[4], 0),\n      y: parseFloat(matrix[13] || matrix[5], 0)\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n}\nvar matrix2d = /matrix\\((.*)\\)/;\nvar matrix3d = /matrix3d\\((.*)\\)/;\nfunction setTransformXY(node, xy) {\n  var style = window.getComputedStyle(node, null);\n  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());\n\n  if (transform && transform !== 'none') {\n    var arr;\n    var match2d = transform.match(matrix2d);\n\n    if (match2d) {\n      match2d = match2d[1];\n      arr = match2d.split(',').map(function (item) {\n        return parseFloat(item, 10);\n      });\n      arr[4] = xy.x;\n      arr[5] = xy.y;\n      setTransform(node, \"matrix(\".concat(arr.join(','), \")\"));\n    } else {\n      var match3d = transform.match(matrix3d)[1];\n      arr = match3d.split(',').map(function (item) {\n        return parseFloat(item, 10);\n      });\n      arr[12] = xy.x;\n      arr[13] = xy.y;\n      setTransform(node, \"matrix3d(\".concat(arr.join(','), \")\"));\n    }\n  } else {\n    setTransform(node, \"translateX(\".concat(xy.x, \"px) translateY(\").concat(xy.y, \"px) translateZ(0)\"));\n  }\n}\n\nvar RE_NUM = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source;\nvar getComputedStyleX; // https://stackoverflow.com/a/3485654/3040605\n\nfunction forceRelayout(elem) {\n  var originalStyle = elem.style.display;\n  elem.style.display = 'none';\n  elem.offsetHeight; // eslint-disable-line\n\n  elem.style.display = originalStyle;\n}\n\nfunction css(el, name, v) {\n  var value = v;\n\n  if (_typeof(name) === 'object') {\n    for (var i in name) {\n      if (name.hasOwnProperty(i)) {\n        css(el, i, name[i]);\n      }\n    }\n\n    return undefined;\n  }\n\n  if (typeof value !== 'undefined') {\n    if (typeof value === 'number') {\n      value = \"\".concat(value, \"px\");\n    }\n\n    el.style[name] = value;\n    return undefined;\n  }\n\n  return getComputedStyleX(el, name);\n}\n\nfunction getClientPosition(elem) {\n  var box;\n  var x;\n  var y;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement; // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式\n\n  box = elem.getBoundingClientRect(); // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop\n  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确\n  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin\n\n  x = box.left;\n  y = box.top; // In IE, most of the time, 2 extra pixels are added to the top and left\n  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n  // IE6 standards mode, this border can be overridden by setting the\n  // document element's border to zero -- thus, we cannot rely on the\n  // offset always being 2 pixels.\n  // In quirks mode, the offset can be determined by querying the body's\n  // clientLeft/clientTop, but in standards mode, it is found by querying\n  // the document element's clientLeft/clientTop.  Since we already called\n  // getClientBoundingRect we have already forced a reflow, so it is not\n  // too expensive just to query them all.\n  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的\n  // 窗口边框标准是设 documentElement ,quirks 时设置 body\n  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去\n  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置\n  // 标准 ie 下 docElem.clientTop 就是 border-top\n  // ie7 html 即窗口边框改变不了。永远为 2\n  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0\n\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getScroll(w, top) {\n  var ret = w[\"page\".concat(top ? 'Y' : 'X', \"Offset\")];\n  var method = \"scroll\".concat(top ? 'Top' : 'Left');\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getScrollLeft(w) {\n  return getScroll(w);\n}\n\nfunction getScrollTop(w) {\n  return getScroll(w, true);\n}\n\nfunction getOffset(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScrollLeft(w);\n  pos.top += getScrollTop(w);\n  return pos;\n}\n/**\n * A crude way of determining if an object is a window\n * @member util\n */\n\n\nfunction isWindow(obj) {\n  // must use == for ie8\n\n  /* eslint eqeqeq:0 */\n  return obj !== null && obj !== undefined && obj == obj.window;\n}\n\nfunction getDocument(node) {\n  if (isWindow(node)) {\n    return node.document;\n  }\n\n  if (node.nodeType === 9) {\n    return node;\n  }\n\n  return node.ownerDocument;\n}\n\nfunction _getComputedStyle(elem, name, cs) {\n  var computedStyle = cs;\n  var val = '';\n  var d = getDocument(elem);\n  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null); // https://github.com/kissyteam/kissy/issues/61\n\n  if (computedStyle) {\n    val = computedStyle.getPropertyValue(name) || computedStyle[name];\n  }\n\n  return val;\n}\n\nvar _RE_NUM_NO_PX = new RegExp(\"^(\".concat(RE_NUM, \")(?!px)[a-z%]+$\"), 'i');\n\nvar RE_POS = /^(top|right|bottom|left)$/;\nvar CURRENT_STYLE = 'currentStyle';\nvar RUNTIME_STYLE = 'runtimeStyle';\nvar LEFT = 'left';\nvar PX = 'px';\n\nfunction _getComputedStyleIE(elem, name) {\n  // currentStyle maybe null\n  // http://msdn.microsoft.com/en-us/library/ms535231.aspx\n  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]; // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值\n  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19\n  // 在 ie 下不对，需要直接用 offset 方式\n  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了\n  // From the awesome hack by Dean Edwards\n  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n  // If we're not dealing with a regular pixel number\n  // but a number that has a weird ending, we need to convert it to pixels\n  // exclude left right for relativity\n\n  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {\n    // Remember the original values\n    var style = elem.style;\n    var left = style[LEFT];\n    var rsLeft = elem[RUNTIME_STYLE][LEFT]; // prevent flashing of content\n\n    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]; // Put in the new values to get a computed value out\n\n    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;\n    ret = style.pixelLeft + PX; // Revert the changed values\n\n    style[LEFT] = left;\n    elem[RUNTIME_STYLE][LEFT] = rsLeft;\n  }\n\n  return ret === '' ? 'auto' : ret;\n}\n\nif (typeof window !== 'undefined') {\n  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;\n}\n\nfunction getOffsetDirection(dir, option) {\n  if (dir === 'left') {\n    return option.useCssRight ? 'right' : dir;\n  }\n\n  return option.useCssBottom ? 'bottom' : dir;\n}\n\nfunction oppositeOffsetDirection(dir) {\n  if (dir === 'left') {\n    return 'right';\n  } else if (dir === 'right') {\n    return 'left';\n  } else if (dir === 'top') {\n    return 'bottom';\n  } else if (dir === 'bottom') {\n    return 'top';\n  }\n} // 设置 elem 相对 elem.ownerDocument 的坐标\n\n\nfunction setLeftTop(elem, offset, option) {\n  // set position first, in-case top/left are set even on static elem\n  if (css(elem, 'position') === 'static') {\n    elem.style.position = 'relative';\n  }\n\n  var presetH = -999;\n  var presetV = -999;\n  var horizontalProperty = getOffsetDirection('left', option);\n  var verticalProperty = getOffsetDirection('top', option);\n  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);\n  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);\n\n  if (horizontalProperty !== 'left') {\n    presetH = 999;\n  }\n\n  if (verticalProperty !== 'top') {\n    presetV = 999;\n  }\n\n  var originalTransition = '';\n  var originalOffset = getOffset(elem);\n\n  if ('left' in offset || 'top' in offset) {\n    originalTransition = getTransitionProperty(elem) || '';\n    setTransitionProperty(elem, 'none');\n  }\n\n  if ('left' in offset) {\n    elem.style[oppositeHorizontalProperty] = '';\n    elem.style[horizontalProperty] = \"\".concat(presetH, \"px\");\n  }\n\n  if ('top' in offset) {\n    elem.style[oppositeVerticalProperty] = '';\n    elem.style[verticalProperty] = \"\".concat(presetV, \"px\");\n  } // force relayout\n\n\n  forceRelayout(elem);\n  var old = getOffset(elem);\n  var originalStyle = {};\n\n  for (var key in offset) {\n    if (offset.hasOwnProperty(key)) {\n      var dir = getOffsetDirection(key, option);\n      var preset = key === 'left' ? presetH : presetV;\n      var off = originalOffset[key] - old[key];\n\n      if (dir === key) {\n        originalStyle[dir] = preset + off;\n      } else {\n        originalStyle[dir] = preset - off;\n      }\n    }\n  }\n\n  css(elem, originalStyle); // force relayout\n\n  forceRelayout(elem);\n\n  if ('left' in offset || 'top' in offset) {\n    setTransitionProperty(elem, originalTransition);\n  }\n\n  var ret = {};\n\n  for (var _key in offset) {\n    if (offset.hasOwnProperty(_key)) {\n      var _dir = getOffsetDirection(_key, option);\n\n      var _off = offset[_key] - originalOffset[_key];\n\n      if (_key === _dir) {\n        ret[_dir] = originalStyle[_dir] + _off;\n      } else {\n        ret[_dir] = originalStyle[_dir] - _off;\n      }\n    }\n  }\n\n  css(elem, ret);\n}\n\nfunction setTransform$1(elem, offset) {\n  var originalOffset = getOffset(elem);\n  var originalXY = getTransformXY(elem);\n  var resultXY = {\n    x: originalXY.x,\n    y: originalXY.y\n  };\n\n  if ('left' in offset) {\n    resultXY.x = originalXY.x + offset.left - originalOffset.left;\n  }\n\n  if ('top' in offset) {\n    resultXY.y = originalXY.y + offset.top - originalOffset.top;\n  }\n\n  setTransformXY(elem, resultXY);\n}\n\nfunction setOffset(elem, offset, option) {\n  if (option.ignoreShake) {\n    var oriOffset = getOffset(elem);\n    var oLeft = oriOffset.left.toFixed(0);\n    var oTop = oriOffset.top.toFixed(0);\n    var tLeft = offset.left.toFixed(0);\n    var tTop = offset.top.toFixed(0);\n\n    if (oLeft === tLeft && oTop === tTop) {\n      return;\n    }\n  }\n\n  if (option.useCssRight || option.useCssBottom) {\n    setLeftTop(elem, offset, option);\n  } else if (option.useCssTransform && getTransformName() in document.body.style) {\n    setTransform$1(elem, offset);\n  } else {\n    setLeftTop(elem, offset, option);\n  }\n}\n\nfunction each(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction isBorderBoxFn(elem) {\n  return getComputedStyleX(elem, 'boxSizing') === 'border-box';\n}\n\nvar BOX_MODELS = ['margin', 'border', 'padding'];\nvar CONTENT_INDEX = -1;\nvar PADDING_INDEX = 2;\nvar BORDER_INDEX = 1;\nvar MARGIN_INDEX = 0;\n\nfunction swap(elem, options, callback) {\n  var old = {};\n  var style = elem.style;\n  var name; // Remember the old values, and insert the new ones\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      old[name] = style[name];\n      style[name] = options[name];\n    }\n  }\n\n  callback.call(elem); // Revert the old values\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      style[name] = old[name];\n    }\n  }\n}\n\nfunction getPBMWidth(elem, props, which) {\n  var value = 0;\n  var prop;\n  var j;\n  var i;\n\n  for (j = 0; j < props.length; j++) {\n    prop = props[j];\n\n    if (prop) {\n      for (i = 0; i < which.length; i++) {\n        var cssProp = void 0;\n\n        if (prop === 'border') {\n          cssProp = \"\".concat(prop).concat(which[i], \"Width\");\n        } else {\n          cssProp = prop + which[i];\n        }\n\n        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;\n      }\n    }\n  }\n\n  return value;\n}\n\nvar domUtils = {\n  getParent: function getParent(element) {\n    var parent = element;\n\n    do {\n      if (parent.nodeType === 11 && parent.host) {\n        parent = parent.host;\n      } else {\n        parent = parent.parentNode;\n      }\n    } while (parent && parent.nodeType !== 1 && parent.nodeType !== 9);\n\n    return parent;\n  }\n};\neach(['Width', 'Height'], function (name) {\n  domUtils[\"doc\".concat(name)] = function (refWin) {\n    var d = refWin.document;\n    return Math.max( // firefox chrome documentElement.scrollHeight< body.scrollHeight\n    // ie standard mode : documentElement.scrollHeight> body.scrollHeight\n    d.documentElement[\"scroll\".concat(name)], // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？\n    d.body[\"scroll\".concat(name)], domUtils[\"viewport\".concat(name)](d));\n  };\n\n  domUtils[\"viewport\".concat(name)] = function (win) {\n    // pc browser includes scrollbar in window.innerWidth\n    var prop = \"client\".concat(name);\n    var doc = win.document;\n    var body = doc.body;\n    var documentElement = doc.documentElement;\n    var documentElementProp = documentElement[prop]; // 标准模式取 documentElement\n    // backcompat 取 body\n\n    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;\n  };\n});\n/*\n 得到元素的大小信息\n @param elem\n @param name\n @param {String} [extra]  'padding' : (css width) + padding\n 'border' : (css width) + padding + border\n 'margin' : (css width) + padding + border + margin\n */\n\nfunction getWH(elem, name, ex) {\n  var extra = ex;\n\n  if (isWindow(elem)) {\n    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);\n  } else if (elem.nodeType === 9) {\n    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);\n  }\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;\n  var computedStyle = getComputedStyleX(elem);\n  var isBorderBox = isBorderBoxFn(elem);\n  var cssBoxValue = 0;\n\n  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {\n    borderBoxValue = undefined; // Fall back to computed then un computed css if necessary\n\n    cssBoxValue = getComputedStyleX(elem, name);\n\n    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {\n      cssBoxValue = elem.style[name] || 0;\n    } // Normalize '', auto, and prepare for extra\n\n\n    cssBoxValue = parseFloat(cssBoxValue) || 0;\n  }\n\n  if (extra === undefined) {\n    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;\n  }\n\n  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;\n  var val = borderBoxValue || cssBoxValue;\n\n  if (extra === CONTENT_INDEX) {\n    if (borderBoxValueOrIsBorderBox) {\n      return val - getPBMWidth(elem, ['border', 'padding'], which);\n    }\n\n    return cssBoxValue;\n  } else if (borderBoxValueOrIsBorderBox) {\n    if (extra === BORDER_INDEX) {\n      return val;\n    }\n\n    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which) : getPBMWidth(elem, ['margin'], which));\n  }\n\n  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);\n}\n\nvar cssShow = {\n  position: 'absolute',\n  visibility: 'hidden',\n  display: 'block'\n}; // fix #119 : https://github.com/kissyteam/kissy/issues/119\n\nfunction getWHIgnoreDisplay() {\n  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var val;\n  var elem = args[0]; // in case elem is window\n  // elem.offsetWidth === undefined\n\n  if (elem.offsetWidth !== 0) {\n    val = getWH.apply(undefined, args);\n  } else {\n    swap(elem, cssShow, function () {\n      val = getWH.apply(undefined, args);\n    });\n  }\n\n  return val;\n}\n\neach(['width', 'height'], function (name) {\n  var first = name.charAt(0).toUpperCase() + name.slice(1);\n\n  domUtils[\"outer\".concat(first)] = function (el, includeMargin) {\n    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);\n  };\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n\n  domUtils[name] = function (elem, v) {\n    var val = v;\n\n    if (val !== undefined) {\n      if (elem) {\n        var computedStyle = getComputedStyleX(elem);\n        var isBorderBox = isBorderBoxFn(elem);\n\n        if (isBorderBox) {\n          val += getPBMWidth(elem, ['padding', 'border'], which);\n        }\n\n        return css(elem, name, val);\n      }\n\n      return undefined;\n    }\n\n    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);\n  };\n});\n\nfunction mix(to, from) {\n  for (var i in from) {\n    if (from.hasOwnProperty(i)) {\n      to[i] = from[i];\n    }\n  }\n\n  return to;\n}\n\nvar utils = {\n  getWindow: function getWindow(node) {\n    if (node && node.document && node.setTimeout) {\n      return node;\n    }\n\n    var doc = node.ownerDocument || node;\n    return doc.defaultView || doc.parentWindow;\n  },\n  getDocument: getDocument,\n  offset: function offset(el, value, option) {\n    if (typeof value !== 'undefined') {\n      setOffset(el, value, option || {});\n    } else {\n      return getOffset(el);\n    }\n  },\n  isWindow: isWindow,\n  each: each,\n  css: css,\n  clone: function clone(obj) {\n    var i;\n    var ret = {};\n\n    for (i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ret[i] = obj[i];\n      }\n    }\n\n    var overflow = obj.overflow;\n\n    if (overflow) {\n      for (i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ret.overflow[i] = obj.overflow[i];\n        }\n      }\n    }\n\n    return ret;\n  },\n  mix: mix,\n  getWindowScrollLeft: function getWindowScrollLeft(w) {\n    return getScrollLeft(w);\n  },\n  getWindowScrollTop: function getWindowScrollTop(w) {\n    return getScrollTop(w);\n  },\n  merge: function merge() {\n    var ret = {};\n\n    for (var i = 0; i < arguments.length; i++) {\n      utils.mix(ret, i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n\n    return ret;\n  },\n  viewportWidth: 0,\n  viewportHeight: 0\n};\nmix(utils, domUtils);\n\n/**\n * 得到会导致元素显示不全的祖先元素\n */\n\nvar getParent = utils.getParent;\n\nfunction getOffsetParent(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return null;\n  } // ie 这个也不是完全可行\n\n  /*\n   <div style=\"width: 50px;height: 100px;overflow: hidden\">\n   <div style=\"width: 50px;height: 100px;position: relative;\" id=\"d6\">\n   元素 6 高 100px 宽 50px<br/>\n   </div>\n   </div>\n   */\n  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!\n  //  In other browsers it only includes elements with position absolute, relative or\n  // fixed, not elements with overflow set to auto or scroll.\n  //        if (UA.ie && ieMode < 8) {\n  //            return element.offsetParent;\n  //        }\n  // 统一的 offsetParent 方法\n\n\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent;\n  var positionStyle = utils.css(element, 'position');\n  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';\n\n  if (!skipStatic) {\n    return element.nodeName.toLowerCase() === 'html' ? null : getParent(element);\n  }\n\n  for (parent = getParent(element); parent && parent !== body && parent.nodeType !== 9; parent = getParent(parent)) {\n    positionStyle = utils.css(parent, 'position');\n\n    if (positionStyle !== 'static') {\n      return parent;\n    }\n  }\n\n  return null;\n}\n\nvar getParent$1 = utils.getParent;\nfunction isAncestorFixed(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return false;\n  }\n\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent = null;\n\n  for (parent = getParent$1(element); parent && parent !== body; parent = getParent$1(parent)) {\n    var positionStyle = utils.css(parent, 'position');\n\n    if (positionStyle === 'fixed') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * 获得元素的显示部分的区域\n */\n\nfunction getVisibleRectForElement(element, alwaysByViewport) {\n  var visibleRect = {\n    left: 0,\n    right: Infinity,\n    top: 0,\n    bottom: Infinity\n  };\n  var el = getOffsetParent(element);\n  var doc = utils.getDocument(element);\n  var win = doc.defaultView || doc.parentWindow;\n  var body = doc.body;\n  var documentElement = doc.documentElement; // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n\n  while (el) {\n    // clientWidth is zero for inline block elements in ie.\n    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) && // body may have overflow set on it, yet we still get the entire\n    // viewport. In some browsers, el.offsetParent may be\n    // document.documentElement, so check for that too.\n    el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {\n      var pos = utils.offset(el); // add border\n\n      pos.left += el.clientLeft;\n      pos.top += el.clientTop;\n      visibleRect.top = Math.max(visibleRect.top, pos.top);\n      visibleRect.right = Math.min(visibleRect.right, // consider area without scrollBar\n      pos.left + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.left);\n    } else if (el === body || el === documentElement) {\n      break;\n    }\n\n    el = getOffsetParent(el);\n  } // Set element position to fixed\n  // make sure absolute element itself don't affect it's visible area\n  // https://github.com/ant-design/ant-design/issues/7601\n\n\n  var originalPosition = null;\n\n  if (!utils.isWindow(element) && element.nodeType !== 9) {\n    originalPosition = element.style.position;\n    var position = utils.css(element, 'position');\n\n    if (position === 'absolute') {\n      element.style.position = 'fixed';\n    }\n  }\n\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n  var documentWidth = documentElement.scrollWidth;\n  var documentHeight = documentElement.scrollHeight; // scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.\n  // We should cut this ourself.\n\n  var bodyStyle = window.getComputedStyle(body);\n\n  if (bodyStyle.overflowX === 'hidden') {\n    documentWidth = win.innerWidth;\n  }\n\n  if (bodyStyle.overflowY === 'hidden') {\n    documentHeight = win.innerHeight;\n  } // Reset element position after calculate the visible area\n\n\n  if (element.style) {\n    element.style.position = originalPosition;\n  }\n\n  if (alwaysByViewport || isAncestorFixed(element)) {\n    // Clip by viewport's size.\n    visibleRect.left = Math.max(visibleRect.left, scrollX);\n    visibleRect.top = Math.max(visibleRect.top, scrollY);\n    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\n    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\n  } else {\n    // Clip by document's size.\n    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\n    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\n    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\n    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\n  }\n\n  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n}\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  } // Left edge inside and right edge outside viewport, try to resize it.\n\n\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  } // Right edge outside viewport, try to move it.\n\n\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  } // Top edge outside viewport, try to move it.\n\n\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  } // Top edge inside and bottom edge outside viewport, try to resize it.\n\n\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  } // Bottom edge outside viewport, try to move it.\n\n\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return utils.mix(pos, size);\n}\n\nfunction getRegion(node) {\n  var offset;\n  var w;\n  var h;\n\n  if (!utils.isWindow(node) && node.nodeType !== 9) {\n    offset = utils.offset(node);\n    w = utils.outerWidth(node);\n    h = utils.outerHeight(node);\n  } else {\n    var win = utils.getWindow(node);\n    offset = {\n      left: utils.getWindowScrollLeft(win),\n      top: utils.getWindowScrollTop(win)\n    };\n    w = utils.viewportWidth(win);\n    h = utils.viewportHeight(win);\n  }\n\n  offset.width = w;\n  offset.height = h;\n  return offset;\n}\n\n/**\n * 获取 node 上的 align 对齐点 相对于页面的坐标\n */\nfunction getAlignOffset(region, align) {\n  var V = align.charAt(0);\n  var H = align.charAt(1);\n  var w = region.width;\n  var h = region.height;\n  var x = region.left;\n  var y = region.top;\n\n  if (V === 'c') {\n    y += h / 2;\n  } else if (V === 'b') {\n    y += h;\n  }\n\n  if (H === 'c') {\n    x += w / 2;\n  } else if (H === 'r') {\n    x += w;\n  }\n\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {\n  var p1 = getAlignOffset(refNodeRegion, points[1]);\n  var p2 = getAlignOffset(elRegion, points[0]);\n  var diff = [p2.left - p1.left, p2.top - p1.top];\n  return {\n    left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),\n    top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1])\n  };\n}\n\n/**\n * align dom node flexibly\n * @author yiminghe@gmail.com\n */\n\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\n}\n\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\n}\n\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\n}\n\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\n}\n\nfunction flip(points, reg, map) {\n  var ret = [];\n  utils.each(points, function (p) {\n    ret.push(p.replace(reg, function (m) {\n      return map[m];\n    }));\n  });\n  return ret;\n}\n\nfunction flipOffset(offset, index) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction convertOffset(str, offsetLen) {\n  var n;\n\n  if (/%$/.test(str)) {\n    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\n  } else {\n    n = parseInt(str, 10);\n  }\n\n  return n || 0;\n}\n\nfunction normalizeOffset(offset, el) {\n  offset[0] = convertOffset(offset[0], el.width);\n  offset[1] = convertOffset(offset[1], el.height);\n}\n/**\n * @param el\n * @param tgtRegion 参照节点所占的区域: { left, top, width, height }\n * @param align\n */\n\n\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\n  var points = align.points;\n  var offset = align.offset || [0, 0];\n  var targetOffset = align.targetOffset || [0, 0];\n  var overflow = align.overflow;\n  var source = align.source || el;\n  offset = [].concat(offset);\n  targetOffset = [].concat(targetOffset);\n  overflow = overflow || {};\n  var newOverflowCfg = {};\n  var fail = 0;\n  var alwaysByViewport = !!(overflow && overflow.alwaysByViewport); // 当前节点可以被放置的显示区域\n\n  var visibleRect = getVisibleRectForElement(source, alwaysByViewport); // 当前节点所占的区域, left/top/width/height\n\n  var elRegion = getRegion(source); // 将 offset 转换成数值，支持百分比\n\n  normalizeOffset(offset, elRegion);\n  normalizeOffset(targetOffset, tgtRegion); // 当前节点将要被放置的位置\n\n  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset); // 当前节点将要所处的区域\n\n  var newElRegion = utils.merge(elRegion, elFuturePos); // 如果可视区域不能完全放置当前节点时允许调整\n\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\n    if (overflow.adjustX) {\n      // 如果横向不能放下\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var newPoints = flip(points, /[lr]/gi, {\n          l: 'r',\n          r: 'l'\n        }); // 偏移量也反下\n\n        var newOffset = flipOffset(offset, 0);\n        var newTargetOffset = flipOffset(targetOffset, 0);\n        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\n\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset = newOffset;\n          targetOffset = newTargetOffset;\n        }\n      }\n    }\n\n    if (overflow.adjustY) {\n      // 如果纵向不能放下\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var _newPoints = flip(points, /[tb]/gi, {\n          t: 'b',\n          b: 't'\n        }); // 偏移量也反下\n\n\n        var _newOffset = flipOffset(offset, 1);\n\n        var _newTargetOffset = flipOffset(targetOffset, 1);\n\n        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\n\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset = _newOffset;\n          targetOffset = _newTargetOffset;\n        }\n      }\n    } // 如果失败，重新计算当前节点将要被放置的位置\n\n\n    if (fail) {\n      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n      utils.mix(newElRegion, elFuturePos);\n    }\n\n    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\n    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect); // 检查反下后的位置是否可以放下了，如果仍然放不下：\n    // 1. 复原修改过的定位参数\n\n    if (isStillFailX || isStillFailY) {\n      var _newPoints2 = points; // 重置对应部分的翻转逻辑\n\n      if (isStillFailX) {\n        _newPoints2 = flip(points, /[lr]/gi, {\n          l: 'r',\n          r: 'l'\n        });\n      }\n\n      if (isStillFailY) {\n        _newPoints2 = flip(points, /[tb]/gi, {\n          t: 'b',\n          b: 't'\n        });\n      }\n\n      points = _newPoints2;\n      offset = align.offset || [0, 0];\n      targetOffset = align.targetOffset || [0, 0];\n    } // 2. 只有指定了可以调整当前方向才调整\n\n\n    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\n    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY; // 确实要调整，甚至可能会调整高度宽度\n\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  } // need judge to in case set fixed with in css on height auto element\n\n\n  if (newElRegion.width !== elRegion.width) {\n    utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);\n  }\n\n  if (newElRegion.height !== elRegion.height) {\n    utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);\n  } // https://github.com/kissyteam/kissy/issues/190\n  // 相对于屏幕位置没变，而 left/top 变了\n  // 例如 <div 'relative'><el absolute></div>\n\n\n  utils.offset(source, {\n    left: newElRegion.left,\n    top: newElRegion.top\n  }, {\n    useCssRight: align.useCssRight,\n    useCssBottom: align.useCssBottom,\n    useCssTransform: align.useCssTransform,\n    ignoreShake: align.ignoreShake\n  });\n  return {\n    points: points,\n    offset: offset,\n    targetOffset: targetOffset,\n    overflow: newOverflowCfg\n  };\n}\n/**\n *  2012-04-26 yiminghe@gmail.com\n *   - 优化智能对齐算法\n *   - 慎用 resizeXX\n *\n *  2011-07-13 yiminghe@gmail.com note:\n *   - 增加智能对齐，以及大小调整选项\n **/\n\nfunction isOutOfVisibleRect(target, alwaysByViewport) {\n  var visibleRect = getVisibleRectForElement(target, alwaysByViewport);\n  var targetRegion = getRegion(target);\n  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;\n}\n\nfunction alignElement(el, refNode, align) {\n  var target = align.target || refNode;\n  var refNodeRegion = getRegion(target);\n  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target, align.overflow && align.overflow.alwaysByViewport);\n  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);\n}\n\nalignElement.__getOffsetParent = getOffsetParent;\nalignElement.__getVisibleRectForElement = getVisibleRectForElement;\n\n/**\n * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.\n * If client position provided, will internal convert to page position.\n */\n\nfunction alignPoint(el, tgtPoint, align) {\n  var pageX;\n  var pageY;\n  var doc = utils.getDocument(el);\n  var win = doc.defaultView || doc.parentWindow;\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n\n  if ('pageX' in tgtPoint) {\n    pageX = tgtPoint.pageX;\n  } else {\n    pageX = scrollX + tgtPoint.clientX;\n  }\n\n  if ('pageY' in tgtPoint) {\n    pageY = tgtPoint.pageY;\n  } else {\n    pageY = scrollY + tgtPoint.clientY;\n  }\n\n  var tgtRegion = {\n    left: pageX,\n    top: pageY,\n    width: 0,\n    height: 0\n  };\n  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight; // Provide default target point\n\n  var points = [align.points[0], 'cc'];\n  return doAlign(el, tgtRegion, _objectSpread2({}, align, {\n    points: points\n  }), pointInView);\n}\n\nexport default alignElement;\nexport { alignElement, alignPoint };\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n"],"sourceRoot":""}